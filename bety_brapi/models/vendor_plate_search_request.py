# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class VendorPlateSearchRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, client_plate_db_ids: List[str]=None, page: int=None, page_size: int=None, sample_info: bool=None, vendor_plate_db_ids: List[str]=None, vendor_project_db_ids: List[str]=None):  # noqa: E501
        """VendorPlateSearchRequest - a model defined in Swagger

        :param client_plate_db_ids: The client_plate_db_ids of this VendorPlateSearchRequest.  # noqa: E501
        :type client_plate_db_ids: List[str]
        :param page: The page of this VendorPlateSearchRequest.  # noqa: E501
        :type page: int
        :param page_size: The page_size of this VendorPlateSearchRequest.  # noqa: E501
        :type page_size: int
        :param sample_info: The sample_info of this VendorPlateSearchRequest.  # noqa: E501
        :type sample_info: bool
        :param vendor_plate_db_ids: The vendor_plate_db_ids of this VendorPlateSearchRequest.  # noqa: E501
        :type vendor_plate_db_ids: List[str]
        :param vendor_project_db_ids: The vendor_project_db_ids of this VendorPlateSearchRequest.  # noqa: E501
        :type vendor_project_db_ids: List[str]
        """
        self.swagger_types = {
            'client_plate_db_ids': List[str],
            'page': int,
            'page_size': int,
            'sample_info': bool,
            'vendor_plate_db_ids': List[str],
            'vendor_project_db_ids': List[str]
        }

        self.attribute_map = {
            'client_plate_db_ids': 'clientPlateDbIds',
            'page': 'page',
            'page_size': 'pageSize',
            'sample_info': 'sampleInfo',
            'vendor_plate_db_ids': 'vendorPlateDbIds',
            'vendor_project_db_ids': 'vendorProjectDbIds'
        }

        self._client_plate_db_ids = client_plate_db_ids
        self._page = page
        self._page_size = page_size
        self._sample_info = sample_info
        self._vendor_plate_db_ids = vendor_plate_db_ids
        self._vendor_project_db_ids = vendor_project_db_ids

    @classmethod
    def from_dict(cls, dikt) -> 'VendorPlateSearchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The vendorPlateSearchRequest of this VendorPlateSearchRequest.  # noqa: E501
        :rtype: VendorPlateSearchRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_plate_db_ids(self) -> List[str]:
        """Gets the client_plate_db_ids of this VendorPlateSearchRequest.

        List of plate ids from the client database to filter search  # noqa: E501

        :return: The client_plate_db_ids of this VendorPlateSearchRequest.
        :rtype: List[str]
        """
        return self._client_plate_db_ids

    @client_plate_db_ids.setter
    def client_plate_db_ids(self, client_plate_db_ids: List[str]):
        """Sets the client_plate_db_ids of this VendorPlateSearchRequest.

        List of plate ids from the client database to filter search  # noqa: E501

        :param client_plate_db_ids: The client_plate_db_ids of this VendorPlateSearchRequest.
        :type client_plate_db_ids: List[str]
        """

        self._client_plate_db_ids = client_plate_db_ids

    @property
    def page(self) -> int:
        """Gets the page of this VendorPlateSearchRequest.

        Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.  # noqa: E501

        :return: The page of this VendorPlateSearchRequest.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page: int):
        """Sets the page of this VendorPlateSearchRequest.

        Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.  # noqa: E501

        :param page: The page of this VendorPlateSearchRequest.
        :type page: int
        """

        self._page = page

    @property
    def page_size(self) -> int:
        """Gets the page_size of this VendorPlateSearchRequest.

        The maximum number of items to return per page of the \"data\" array. Default is 1000.  # noqa: E501

        :return: The page_size of this VendorPlateSearchRequest.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size: int):
        """Sets the page_size of this VendorPlateSearchRequest.

        The maximum number of items to return per page of the \"data\" array. Default is 1000.  # noqa: E501

        :param page_size: The page_size of this VendorPlateSearchRequest.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def sample_info(self) -> bool:
        """Gets the sample_info of this VendorPlateSearchRequest.

        Include array of sample information or not in response  # noqa: E501

        :return: The sample_info of this VendorPlateSearchRequest.
        :rtype: bool
        """
        return self._sample_info

    @sample_info.setter
    def sample_info(self, sample_info: bool):
        """Sets the sample_info of this VendorPlateSearchRequest.

        Include array of sample information or not in response  # noqa: E501

        :param sample_info: The sample_info of this VendorPlateSearchRequest.
        :type sample_info: bool
        """

        self._sample_info = sample_info

    @property
    def vendor_plate_db_ids(self) -> List[str]:
        """Gets the vendor_plate_db_ids of this VendorPlateSearchRequest.

        List of plate ids from the vendors database to filter search  # noqa: E501

        :return: The vendor_plate_db_ids of this VendorPlateSearchRequest.
        :rtype: List[str]
        """
        return self._vendor_plate_db_ids

    @vendor_plate_db_ids.setter
    def vendor_plate_db_ids(self, vendor_plate_db_ids: List[str]):
        """Sets the vendor_plate_db_ids of this VendorPlateSearchRequest.

        List of plate ids from the vendors database to filter search  # noqa: E501

        :param vendor_plate_db_ids: The vendor_plate_db_ids of this VendorPlateSearchRequest.
        :type vendor_plate_db_ids: List[str]
        """

        self._vendor_plate_db_ids = vendor_plate_db_ids

    @property
    def vendor_project_db_ids(self) -> List[str]:
        """Gets the vendor_project_db_ids of this VendorPlateSearchRequest.

        List of project ids from the vendors database to filter search  # noqa: E501

        :return: The vendor_project_db_ids of this VendorPlateSearchRequest.
        :rtype: List[str]
        """
        return self._vendor_project_db_ids

    @vendor_project_db_ids.setter
    def vendor_project_db_ids(self, vendor_project_db_ids: List[str]):
        """Sets the vendor_project_db_ids of this VendorPlateSearchRequest.

        List of project ids from the vendors database to filter search  # noqa: E501

        :param vendor_project_db_ids: The vendor_project_db_ids of this VendorPlateSearchRequest.
        :type vendor_project_db_ids: List[str]
        """

        self._vendor_project_db_ids = vendor_project_db_ids
