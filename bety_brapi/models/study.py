# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi.models.contact import Contact  # noqa: F401,E501
from bety_brapi.models.data_link import DataLink  # noqa: F401,E501
from bety_brapi.models.location import Location  # noqa: F401,E501
from bety_brapi.models.study_last_update import StudyLastUpdate  # noqa: F401,E501
from bety_brapi import util


class Study(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, active: str=None, additional_info: Dict[str, str]=None, contacts: List[Contact]=None, data_links: List[DataLink]=None, end_date: date=None, last_update: StudyLastUpdate=None, license: str=None, location: Location=None, seasons: List[str]=None, start_date: date=None, study_db_id: str=None, study_description: str=None, study_name: str=None, study_type: str=None, trial_db_id: str=None, trial_name: str=None):  # noqa: E501
        """Study - a model defined in Swagger

        :param active: The active of this Study.  # noqa: E501
        :type active: str
        :param additional_info: The additional_info of this Study.  # noqa: E501
        :type additional_info: Dict[str, str]
        :param contacts: The contacts of this Study.  # noqa: E501
        :type contacts: List[Contact]
        :param data_links: The data_links of this Study.  # noqa: E501
        :type data_links: List[DataLink]
        :param end_date: The end_date of this Study.  # noqa: E501
        :type end_date: date
        :param last_update: The last_update of this Study.  # noqa: E501
        :type last_update: StudyLastUpdate
        :param license: The license of this Study.  # noqa: E501
        :type license: str
        :param location: The location of this Study.  # noqa: E501
        :type location: Location
        :param seasons: The seasons of this Study.  # noqa: E501
        :type seasons: List[str]
        :param start_date: The start_date of this Study.  # noqa: E501
        :type start_date: date
        :param study_db_id: The study_db_id of this Study.  # noqa: E501
        :type study_db_id: str
        :param study_description: The study_description of this Study.  # noqa: E501
        :type study_description: str
        :param study_name: The study_name of this Study.  # noqa: E501
        :type study_name: str
        :param study_type: The study_type of this Study.  # noqa: E501
        :type study_type: str
        :param trial_db_id: The trial_db_id of this Study.  # noqa: E501
        :type trial_db_id: str
        :param trial_name: The trial_name of this Study.  # noqa: E501
        :type trial_name: str
        """
        self.swagger_types = {
            'active': str,
            'additional_info': Dict[str, str],
            'contacts': List[Contact],
            'data_links': List[DataLink],
            'end_date': date,
            'last_update': StudyLastUpdate,
            'license': str,
            'location': Location,
            'seasons': List[str],
            'start_date': date,
            'study_db_id': str,
            'study_description': str,
            'study_name': str,
            'study_type': str,
            'trial_db_id': str,
            'trial_name': str
        }

        self.attribute_map = {
            'active': 'active',
            'additional_info': 'additionalInfo',
            'contacts': 'contacts',
            'data_links': 'dataLinks',
            'end_date': 'endDate',
            'last_update': 'lastUpdate',
            'license': 'license',
            'location': 'location',
            'seasons': 'seasons',
            'start_date': 'startDate',
            'study_db_id': 'studyDbId',
            'study_description': 'studyDescription',
            'study_name': 'studyName',
            'study_type': 'studyType',
            'trial_db_id': 'trialDbId',
            'trial_name': 'trialName'
        }

        self._active = active
        self._additional_info = additional_info
        self._contacts = contacts
        self._data_links = data_links
        self._end_date = end_date
        self._last_update = last_update
        self._license = license
        self._location = location
        self._seasons = seasons
        self._start_date = start_date
        self._study_db_id = study_db_id
        self._study_description = study_description
        self._study_name = study_name
        self._study_type = study_type
        self._trial_db_id = trial_db_id
        self._trial_name = trial_name

    @classmethod
    def from_dict(cls, dikt) -> 'Study':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The study of this Study.  # noqa: E501
        :rtype: Study
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self) -> str:
        """Gets the active of this Study.

        Is this study currently active  # noqa: E501

        :return: The active of this Study.
        :rtype: str
        """
        return self._active

    @active.setter
    def active(self, active: str):
        """Sets the active of this Study.

        Is this study currently active  # noqa: E501

        :param active: The active of this Study.
        :type active: str
        """

        self._active = active

    @property
    def additional_info(self) -> Dict[str, str]:
        """Gets the additional_info of this Study.

        Additional arbitrary info  # noqa: E501

        :return: The additional_info of this Study.
        :rtype: Dict[str, str]
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info: Dict[str, str]):
        """Sets the additional_info of this Study.

        Additional arbitrary info  # noqa: E501

        :param additional_info: The additional_info of this Study.
        :type additional_info: Dict[str, str]
        """

        self._additional_info = additional_info

    @property
    def contacts(self) -> List[Contact]:
        """Gets the contacts of this Study.

        List of contact entities associated with this study  # noqa: E501

        :return: The contacts of this Study.
        :rtype: List[Contact]
        """
        return self._contacts

    @contacts.setter
    def contacts(self, contacts: List[Contact]):
        """Sets the contacts of this Study.

        List of contact entities associated with this study  # noqa: E501

        :param contacts: The contacts of this Study.
        :type contacts: List[Contact]
        """

        self._contacts = contacts

    @property
    def data_links(self) -> List[DataLink]:
        """Gets the data_links of this Study.

        List of links to extra data files associated with this study. Extra data could include notes, images, and reference data.  # noqa: E501

        :return: The data_links of this Study.
        :rtype: List[DataLink]
        """
        return self._data_links

    @data_links.setter
    def data_links(self, data_links: List[DataLink]):
        """Sets the data_links of this Study.

        List of links to extra data files associated with this study. Extra data could include notes, images, and reference data.  # noqa: E501

        :param data_links: The data_links of this Study.
        :type data_links: List[DataLink]
        """

        self._data_links = data_links

    @property
    def end_date(self) -> date:
        """Gets the end_date of this Study.

        The date the study ends  # noqa: E501

        :return: The end_date of this Study.
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date: date):
        """Sets the end_date of this Study.

        The date the study ends  # noqa: E501

        :param end_date: The end_date of this Study.
        :type end_date: date
        """

        self._end_date = end_date

    @property
    def last_update(self) -> StudyLastUpdate:
        """Gets the last_update of this Study.


        :return: The last_update of this Study.
        :rtype: StudyLastUpdate
        """
        return self._last_update

    @last_update.setter
    def last_update(self, last_update: StudyLastUpdate):
        """Sets the last_update of this Study.


        :param last_update: The last_update of this Study.
        :type last_update: StudyLastUpdate
        """

        self._last_update = last_update

    @property
    def license(self) -> str:
        """Gets the license of this Study.

        The usage license associated with the study data  # noqa: E501

        :return: The license of this Study.
        :rtype: str
        """
        return self._license

    @license.setter
    def license(self, license: str):
        """Sets the license of this Study.

        The usage license associated with the study data  # noqa: E501

        :param license: The license of this Study.
        :type license: str
        """

        self._license = license

    @property
    def location(self) -> Location:
        """Gets the location of this Study.

        The location reference where this study is located.  # noqa: E501

        :return: The location of this Study.
        :rtype: Location
        """
        return self._location

    @location.setter
    def location(self, location: Location):
        """Sets the location of this Study.

        The location reference where this study is located.  # noqa: E501

        :param location: The location of this Study.
        :type location: Location
        """

        self._location = location

    @property
    def seasons(self) -> List[str]:
        """Gets the seasons of this Study.

        List of seasons over which this study was performed.  # noqa: E501

        :return: The seasons of this Study.
        :rtype: List[str]
        """
        return self._seasons

    @seasons.setter
    def seasons(self, seasons: List[str]):
        """Sets the seasons of this Study.

        List of seasons over which this study was performed.  # noqa: E501

        :param seasons: The seasons of this Study.
        :type seasons: List[str]
        """

        self._seasons = seasons

    @property
    def start_date(self) -> date:
        """Gets the start_date of this Study.

        The date this study started  # noqa: E501

        :return: The start_date of this Study.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date: date):
        """Sets the start_date of this Study.

        The date this study started  # noqa: E501

        :param start_date: The start_date of this Study.
        :type start_date: date
        """

        self._start_date = start_date

    @property
    def study_db_id(self) -> str:
        """Gets the study_db_id of this Study.

        The ID which uniquely identifies a study within the given database server  # noqa: E501

        :return: The study_db_id of this Study.
        :rtype: str
        """
        return self._study_db_id

    @study_db_id.setter
    def study_db_id(self, study_db_id: str):
        """Sets the study_db_id of this Study.

        The ID which uniquely identifies a study within the given database server  # noqa: E501

        :param study_db_id: The study_db_id of this Study.
        :type study_db_id: str
        """

        self._study_db_id = study_db_id

    @property
    def study_description(self) -> str:
        """Gets the study_description of this Study.

        The description of this study  # noqa: E501

        :return: The study_description of this Study.
        :rtype: str
        """
        return self._study_description

    @study_description.setter
    def study_description(self, study_description: str):
        """Sets the study_description of this Study.

        The description of this study  # noqa: E501

        :param study_description: The study_description of this Study.
        :type study_description: str
        """

        self._study_description = study_description

    @property
    def study_name(self) -> str:
        """Gets the study_name of this Study.

        The human readable name for a study  # noqa: E501

        :return: The study_name of this Study.
        :rtype: str
        """
        return self._study_name

    @study_name.setter
    def study_name(self, study_name: str):
        """Sets the study_name of this Study.

        The human readable name for a study  # noqa: E501

        :param study_name: The study_name of this Study.
        :type study_name: str
        """

        self._study_name = study_name

    @property
    def study_type(self) -> str:
        """Gets the study_type of this Study.

        The type of study being performed. ex. \"Yeald Trial\", etc  # noqa: E501

        :return: The study_type of this Study.
        :rtype: str
        """
        return self._study_type

    @study_type.setter
    def study_type(self, study_type: str):
        """Sets the study_type of this Study.

        The type of study being performed. ex. \"Yeald Trial\", etc  # noqa: E501

        :param study_type: The study_type of this Study.
        :type study_type: str
        """

        self._study_type = study_type

    @property
    def trial_db_id(self) -> str:
        """Gets the trial_db_id of this Study.

        The ID which uniquely identifies a trial  # noqa: E501

        :return: The trial_db_id of this Study.
        :rtype: str
        """
        return self._trial_db_id

    @trial_db_id.setter
    def trial_db_id(self, trial_db_id: str):
        """Sets the trial_db_id of this Study.

        The ID which uniquely identifies a trial  # noqa: E501

        :param trial_db_id: The trial_db_id of this Study.
        :type trial_db_id: str
        """

        self._trial_db_id = trial_db_id

    @property
    def trial_name(self) -> str:
        """Gets the trial_name of this Study.

        The human readable name of a trial  # noqa: E501

        :return: The trial_name of this Study.
        :rtype: str
        """
        return self._trial_name

    @trial_name.setter
    def trial_name(self, trial_name: str):
        """Sets the trial_name of this Study.

        The human readable name of a trial  # noqa: E501

        :param trial_name: The trial_name of this Study.
        :type trial_name: str
        """

        self._trial_name = trial_name
