# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class MarkerSummaryMap(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, linkage_group_name: str=None, location: str=None, marker_db_id: str=None, marker_name: str=None):  # noqa: E501
        """MarkerSummaryMap - a model defined in Swagger

        :param linkage_group_name: The linkage_group_name of this MarkerSummaryMap.  # noqa: E501
        :type linkage_group_name: str
        :param location: The location of this MarkerSummaryMap.  # noqa: E501
        :type location: str
        :param marker_db_id: The marker_db_id of this MarkerSummaryMap.  # noqa: E501
        :type marker_db_id: str
        :param marker_name: The marker_name of this MarkerSummaryMap.  # noqa: E501
        :type marker_name: str
        """
        self.swagger_types = {
            'linkage_group_name': str,
            'location': str,
            'marker_db_id': str,
            'marker_name': str
        }

        self.attribute_map = {
            'linkage_group_name': 'linkageGroupName',
            'location': 'location',
            'marker_db_id': 'markerDbId',
            'marker_name': 'markerName'
        }

        self._linkage_group_name = linkage_group_name
        self._location = location
        self._marker_db_id = marker_db_id
        self._marker_name = marker_name

    @classmethod
    def from_dict(cls, dikt) -> 'MarkerSummaryMap':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The markerSummaryMap of this MarkerSummaryMap.  # noqa: E501
        :rtype: MarkerSummaryMap
        """
        return util.deserialize_model(dikt, cls)

    @property
    def linkage_group_name(self) -> str:
        """Gets the linkage_group_name of this MarkerSummaryMap.

        The Uniquely Identifiable name of this linkage group  # noqa: E501

        :return: The linkage_group_name of this MarkerSummaryMap.
        :rtype: str
        """
        return self._linkage_group_name

    @linkage_group_name.setter
    def linkage_group_name(self, linkage_group_name: str):
        """Sets the linkage_group_name of this MarkerSummaryMap.

        The Uniquely Identifiable name of this linkage group  # noqa: E501

        :param linkage_group_name: The linkage_group_name of this MarkerSummaryMap.
        :type linkage_group_name: str
        """

        self._linkage_group_name = linkage_group_name

    @property
    def location(self) -> str:
        """Gets the location of this MarkerSummaryMap.

        The position of a marker within a linkage group  # noqa: E501

        :return: The location of this MarkerSummaryMap.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location: str):
        """Sets the location of this MarkerSummaryMap.

        The position of a marker within a linkage group  # noqa: E501

        :param location: The location of this MarkerSummaryMap.
        :type location: str
        """

        self._location = location

    @property
    def marker_db_id(self) -> str:
        """Gets the marker_db_id of this MarkerSummaryMap.

        Internal db identifier  # noqa: E501

        :return: The marker_db_id of this MarkerSummaryMap.
        :rtype: str
        """
        return self._marker_db_id

    @marker_db_id.setter
    def marker_db_id(self, marker_db_id: str):
        """Sets the marker_db_id of this MarkerSummaryMap.

        Internal db identifier  # noqa: E501

        :param marker_db_id: The marker_db_id of this MarkerSummaryMap.
        :type marker_db_id: str
        """

        self._marker_db_id = marker_db_id

    @property
    def marker_name(self) -> str:
        """Gets the marker_name of this MarkerSummaryMap.

        The human readable name for a marker  # noqa: E501

        :return: The marker_name of this MarkerSummaryMap.
        :rtype: str
        """
        return self._marker_name

    @marker_name.setter
    def marker_name(self, marker_name: str):
        """Sets the marker_name of this MarkerSummaryMap.

        The human readable name for a marker  # noqa: E501

        :param marker_name: The marker_name of this MarkerSummaryMap.
        :type marker_name: str
        """

        self._marker_name = marker_name
