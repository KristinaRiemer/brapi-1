# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class ValidValues(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, categories: List[str]=None, max: int=None, min: int=None):  # noqa: E501
        """ValidValues - a model defined in Swagger

        :param categories: The categories of this ValidValues.  # noqa: E501
        :type categories: List[str]
        :param max: The max of this ValidValues.  # noqa: E501
        :type max: int
        :param min: The min of this ValidValues.  # noqa: E501
        :type min: int
        """
        self.swagger_types = {
            'categories': List[str],
            'max': int,
            'min': int
        }

        self.attribute_map = {
            'categories': 'categories',
            'max': 'max',
            'min': 'min'
        }

        self._categories = categories
        self._max = max
        self._min = min

    @classmethod
    def from_dict(cls, dikt) -> 'ValidValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The validValues of this ValidValues.  # noqa: E501
        :rtype: ValidValues
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categories(self) -> List[str]:
        """Gets the categories of this ValidValues.

        List of possible values and their meaning (examples: [\"0=low\", \"1=medium\", \"2=high\"]  # noqa: E501

        :return: The categories of this ValidValues.
        :rtype: List[str]
        """
        return self._categories

    @categories.setter
    def categories(self, categories: List[str]):
        """Sets the categories of this ValidValues.

        List of possible values and their meaning (examples: [\"0=low\", \"1=medium\", \"2=high\"]  # noqa: E501

        :param categories: The categories of this ValidValues.
        :type categories: List[str]
        """

        self._categories = categories

    @property
    def max(self) -> int:
        """Gets the max of this ValidValues.

        Maximum value (used for field data capture control).  # noqa: E501

        :return: The max of this ValidValues.
        :rtype: int
        """
        return self._max

    @max.setter
    def max(self, max: int):
        """Sets the max of this ValidValues.

        Maximum value (used for field data capture control).  # noqa: E501

        :param max: The max of this ValidValues.
        :type max: int
        """

        self._max = max

    @property
    def min(self) -> int:
        """Gets the min of this ValidValues.

        Minimum value (used for data capture control) for numerical and date scales  # noqa: E501

        :return: The min of this ValidValues.
        :rtype: int
        """
        return self._min

    @min.setter
    def min(self, min: int):
        """Sets the min of this ValidValues.

        Minimum value (used for data capture control) for numerical and date scales  # noqa: E501

        :param min: The min of this ValidValues.
        :type min: int
        """

        self._min = min
