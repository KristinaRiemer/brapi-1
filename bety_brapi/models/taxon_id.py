# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class TaxonID(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, source_name: str=None, taxon_id: str=None):  # noqa: E501
        """TaxonID - a model defined in Swagger

        :param source_name: The source_name of this TaxonID.  # noqa: E501
        :type source_name: str
        :param taxon_id: The taxon_id of this TaxonID.  # noqa: E501
        :type taxon_id: str
        """
        self.swagger_types = {
            'source_name': str,
            'taxon_id': str
        }

        self.attribute_map = {
            'source_name': 'sourceName',
            'taxon_id': 'taxonId'
        }

        self._source_name = source_name
        self._taxon_id = taxon_id

    @classmethod
    def from_dict(cls, dikt) -> 'TaxonID':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The taxonID of this TaxonID.  # noqa: E501
        :rtype: TaxonID
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_name(self) -> str:
        """Gets the source_name of this TaxonID.

        The human readable name of the taxonomy provider  # noqa: E501

        :return: The source_name of this TaxonID.
        :rtype: str
        """
        return self._source_name

    @source_name.setter
    def source_name(self, source_name: str):
        """Sets the source_name of this TaxonID.

        The human readable name of the taxonomy provider  # noqa: E501

        :param source_name: The source_name of this TaxonID.
        :type source_name: str
        """

        self._source_name = source_name

    @property
    def taxon_id(self) -> str:
        """Gets the taxon_id of this TaxonID.

        The identifier (name, ID, URI) of a particular taxonomy within the source provider  # noqa: E501

        :return: The taxon_id of this TaxonID.
        :rtype: str
        """
        return self._taxon_id

    @taxon_id.setter
    def taxon_id(self, taxon_id: str):
        """Sets the taxon_id of this TaxonID.

        The identifier (name, ID, URI) of a particular taxonomy within the source provider  # noqa: E501

        :param taxon_id: The taxon_id of this TaxonID.
        :type taxon_id: str
        """

        self._taxon_id = taxon_id
