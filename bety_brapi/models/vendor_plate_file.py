# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class VendorPlateFile(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, url: str=None, additional_info: Dict[str, str]=None, file_type: str=None, filename: str=None, md5sum: str=None, sample_db_ids: List[str]=None):  # noqa: E501
        """VendorPlateFile - a model defined in Swagger

        :param url: The url of this VendorPlateFile.  # noqa: E501
        :type url: str
        :param additional_info: The additional_info of this VendorPlateFile.  # noqa: E501
        :type additional_info: Dict[str, str]
        :param file_type: The file_type of this VendorPlateFile.  # noqa: E501
        :type file_type: str
        :param filename: The filename of this VendorPlateFile.  # noqa: E501
        :type filename: str
        :param md5sum: The md5sum of this VendorPlateFile.  # noqa: E501
        :type md5sum: str
        :param sample_db_ids: The sample_db_ids of this VendorPlateFile.  # noqa: E501
        :type sample_db_ids: List[str]
        """
        self.swagger_types = {
            'url': str,
            'additional_info': Dict[str, str],
            'file_type': str,
            'filename': str,
            'md5sum': str,
            'sample_db_ids': List[str]
        }

        self.attribute_map = {
            'url': 'URL',
            'additional_info': 'additionalInfo',
            'file_type': 'fileType',
            'filename': 'filename',
            'md5sum': 'md5sum',
            'sample_db_ids': 'sampleDbIds'
        }

        self._url = url
        self._additional_info = additional_info
        self._file_type = file_type
        self._filename = filename
        self._md5sum = md5sum
        self._sample_db_ids = sample_db_ids

    @classmethod
    def from_dict(cls, dikt) -> 'VendorPlateFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The vendorPlateFile of this VendorPlateFile.  # noqa: E501
        :rtype: VendorPlateFile
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self) -> str:
        """Gets the url of this VendorPlateFile.

        The URL to a file with the results of a vendor analysis  # noqa: E501

        :return: The url of this VendorPlateFile.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this VendorPlateFile.

        The URL to a file with the results of a vendor analysis  # noqa: E501

        :param url: The url of this VendorPlateFile.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")  # noqa: E501

        self._url = url

    @property
    def additional_info(self) -> Dict[str, str]:
        """Gets the additional_info of this VendorPlateFile.

        Additional arbitrary info  # noqa: E501

        :return: The additional_info of this VendorPlateFile.
        :rtype: Dict[str, str]
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info: Dict[str, str]):
        """Sets the additional_info of this VendorPlateFile.

        Additional arbitrary info  # noqa: E501

        :param additional_info: The additional_info of this VendorPlateFile.
        :type additional_info: Dict[str, str]
        """

        self._additional_info = additional_info

    @property
    def file_type(self) -> str:
        """Gets the file_type of this VendorPlateFile.

        Format of the file  # noqa: E501

        :return: The file_type of this VendorPlateFile.
        :rtype: str
        """
        return self._file_type

    @file_type.setter
    def file_type(self, file_type: str):
        """Sets the file_type of this VendorPlateFile.

        Format of the file  # noqa: E501

        :param file_type: The file_type of this VendorPlateFile.
        :type file_type: str
        """
        if file_type is None:
            raise ValueError("Invalid value for `file_type`, must not be `None`")  # noqa: E501

        self._file_type = file_type

    @property
    def filename(self) -> str:
        """Gets the filename of this VendorPlateFile.

        Name of the file  # noqa: E501

        :return: The filename of this VendorPlateFile.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename: str):
        """Sets the filename of this VendorPlateFile.

        Name of the file  # noqa: E501

        :param filename: The filename of this VendorPlateFile.
        :type filename: str
        """
        if filename is None:
            raise ValueError("Invalid value for `filename`, must not be `None`")  # noqa: E501

        self._filename = filename

    @property
    def md5sum(self) -> str:
        """Gets the md5sum of this VendorPlateFile.

        MD5 Hash Check Sum for the file to confirm download without error  # noqa: E501

        :return: The md5sum of this VendorPlateFile.
        :rtype: str
        """
        return self._md5sum

    @md5sum.setter
    def md5sum(self, md5sum: str):
        """Sets the md5sum of this VendorPlateFile.

        MD5 Hash Check Sum for the file to confirm download without error  # noqa: E501

        :param md5sum: The md5sum of this VendorPlateFile.
        :type md5sum: str
        """

        self._md5sum = md5sum

    @property
    def sample_db_ids(self) -> List[str]:
        """Gets the sample_db_ids of this VendorPlateFile.

        The list of sampleDbIds included in the file  # noqa: E501

        :return: The sample_db_ids of this VendorPlateFile.
        :rtype: List[str]
        """
        return self._sample_db_ids

    @sample_db_ids.setter
    def sample_db_ids(self, sample_db_ids: List[str]):
        """Sets the sample_db_ids of this VendorPlateFile.

        The list of sampleDbIds included in the file  # noqa: E501

        :param sample_db_ids: The sample_db_ids of this VendorPlateFile.
        :type sample_db_ids: List[str]
        """
        if sample_db_ids is None:
            raise ValueError("Invalid value for `sample_db_ids`, must not be `None`")  # noqa: E501

        self._sample_db_ids = sample_db_ids
