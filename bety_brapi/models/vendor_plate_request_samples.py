# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi.models.taxon_id import TaxonID  # noqa: F401,E501
from bety_brapi import util


class VendorPlateRequestSamples(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, column: str=None, concentration: str=None, row: str=None, sample_db_id: str=None, taxon_id: TaxonID=None, tissue_type: str=None, volume: str=None, well: str=None):  # noqa: E501
        """VendorPlateRequestSamples - a model defined in Swagger

        :param column: The column of this VendorPlateRequestSamples.  # noqa: E501
        :type column: str
        :param concentration: The concentration of this VendorPlateRequestSamples.  # noqa: E501
        :type concentration: str
        :param row: The row of this VendorPlateRequestSamples.  # noqa: E501
        :type row: str
        :param sample_db_id: The sample_db_id of this VendorPlateRequestSamples.  # noqa: E501
        :type sample_db_id: str
        :param taxon_id: The taxon_id of this VendorPlateRequestSamples.  # noqa: E501
        :type taxon_id: TaxonID
        :param tissue_type: The tissue_type of this VendorPlateRequestSamples.  # noqa: E501
        :type tissue_type: str
        :param volume: The volume of this VendorPlateRequestSamples.  # noqa: E501
        :type volume: str
        :param well: The well of this VendorPlateRequestSamples.  # noqa: E501
        :type well: str
        """
        self.swagger_types = {
            'column': str,
            'concentration': str,
            'row': str,
            'sample_db_id': str,
            'taxon_id': TaxonID,
            'tissue_type': str,
            'volume': str,
            'well': str
        }

        self.attribute_map = {
            'column': 'column',
            'concentration': 'concentration',
            'row': 'row',
            'sample_db_id': 'sampleDbId',
            'taxon_id': 'taxonId',
            'tissue_type': 'tissueType',
            'volume': 'volume',
            'well': 'well'
        }

        self._column = column
        self._concentration = concentration
        self._row = row
        self._sample_db_id = sample_db_id
        self._taxon_id = taxon_id
        self._tissue_type = tissue_type
        self._volume = volume
        self._well = well

    @classmethod
    def from_dict(cls, dikt) -> 'VendorPlateRequestSamples':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The vendorPlateRequest_samples of this VendorPlateRequestSamples.  # noqa: E501
        :rtype: VendorPlateRequestSamples
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column(self) -> str:
        """Gets the column of this VendorPlateRequestSamples.


        :return: The column of this VendorPlateRequestSamples.
        :rtype: str
        """
        return self._column

    @column.setter
    def column(self, column: str):
        """Sets the column of this VendorPlateRequestSamples.


        :param column: The column of this VendorPlateRequestSamples.
        :type column: str
        """

        self._column = column

    @property
    def concentration(self) -> str:
        """Gets the concentration of this VendorPlateRequestSamples.


        :return: The concentration of this VendorPlateRequestSamples.
        :rtype: str
        """
        return self._concentration

    @concentration.setter
    def concentration(self, concentration: str):
        """Sets the concentration of this VendorPlateRequestSamples.


        :param concentration: The concentration of this VendorPlateRequestSamples.
        :type concentration: str
        """

        self._concentration = concentration

    @property
    def row(self) -> str:
        """Gets the row of this VendorPlateRequestSamples.


        :return: The row of this VendorPlateRequestSamples.
        :rtype: str
        """
        return self._row

    @row.setter
    def row(self, row: str):
        """Sets the row of this VendorPlateRequestSamples.


        :param row: The row of this VendorPlateRequestSamples.
        :type row: str
        """

        self._row = row

    @property
    def sample_db_id(self) -> str:
        """Gets the sample_db_id of this VendorPlateRequestSamples.


        :return: The sample_db_id of this VendorPlateRequestSamples.
        :rtype: str
        """
        return self._sample_db_id

    @sample_db_id.setter
    def sample_db_id(self, sample_db_id: str):
        """Sets the sample_db_id of this VendorPlateRequestSamples.


        :param sample_db_id: The sample_db_id of this VendorPlateRequestSamples.
        :type sample_db_id: str
        """

        self._sample_db_id = sample_db_id

    @property
    def taxon_id(self) -> TaxonID:
        """Gets the taxon_id of this VendorPlateRequestSamples.


        :return: The taxon_id of this VendorPlateRequestSamples.
        :rtype: TaxonID
        """
        return self._taxon_id

    @taxon_id.setter
    def taxon_id(self, taxon_id: TaxonID):
        """Sets the taxon_id of this VendorPlateRequestSamples.


        :param taxon_id: The taxon_id of this VendorPlateRequestSamples.
        :type taxon_id: TaxonID
        """

        self._taxon_id = taxon_id

    @property
    def tissue_type(self) -> str:
        """Gets the tissue_type of this VendorPlateRequestSamples.


        :return: The tissue_type of this VendorPlateRequestSamples.
        :rtype: str
        """
        return self._tissue_type

    @tissue_type.setter
    def tissue_type(self, tissue_type: str):
        """Sets the tissue_type of this VendorPlateRequestSamples.


        :param tissue_type: The tissue_type of this VendorPlateRequestSamples.
        :type tissue_type: str
        """

        self._tissue_type = tissue_type

    @property
    def volume(self) -> str:
        """Gets the volume of this VendorPlateRequestSamples.


        :return: The volume of this VendorPlateRequestSamples.
        :rtype: str
        """
        return self._volume

    @volume.setter
    def volume(self, volume: str):
        """Sets the volume of this VendorPlateRequestSamples.


        :param volume: The volume of this VendorPlateRequestSamples.
        :type volume: str
        """

        self._volume = volume

    @property
    def well(self) -> str:
        """Gets the well of this VendorPlateRequestSamples.


        :return: The well of this VendorPlateRequestSamples.
        :rtype: str
        """
        return self._well

    @well.setter
    def well(self, well: str):
        """Sets the well of this VendorPlateRequestSamples.


        :param well: The well of this VendorPlateRequestSamples.
        :type well: str
        """

        self._well = well
