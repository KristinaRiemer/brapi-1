# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class TraitSummary(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, default_value: str=None, description: str=None, name: str=None, observation_variables: List[str]=None, trait_db_id: str=None, trait_id: str=None, trait_name: str=None):  # noqa: E501
        """TraitSummary - a model defined in Swagger

        :param default_value: The default_value of this TraitSummary.  # noqa: E501
        :type default_value: str
        :param description: The description of this TraitSummary.  # noqa: E501
        :type description: str
        :param name: The name of this TraitSummary.  # noqa: E501
        :type name: str
        :param observation_variables: The observation_variables of this TraitSummary.  # noqa: E501
        :type observation_variables: List[str]
        :param trait_db_id: The trait_db_id of this TraitSummary.  # noqa: E501
        :type trait_db_id: str
        :param trait_id: The trait_id of this TraitSummary.  # noqa: E501
        :type trait_id: str
        :param trait_name: The trait_name of this TraitSummary.  # noqa: E501
        :type trait_name: str
        """
        self.swagger_types = {
            'default_value': str,
            'description': str,
            'name': str,
            'observation_variables': List[str],
            'trait_db_id': str,
            'trait_id': str,
            'trait_name': str
        }

        self.attribute_map = {
            'default_value': 'defaultValue',
            'description': 'description',
            'name': 'name',
            'observation_variables': 'observationVariables',
            'trait_db_id': 'traitDbId',
            'trait_id': 'traitId',
            'trait_name': 'traitName'
        }

        self._default_value = default_value
        self._description = description
        self._name = name
        self._observation_variables = observation_variables
        self._trait_db_id = trait_db_id
        self._trait_id = trait_id
        self._trait_name = trait_name

    @classmethod
    def from_dict(cls, dikt) -> 'TraitSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The traitSummary of this TraitSummary.  # noqa: E501
        :rtype: TraitSummary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_value(self) -> str:
        """Gets the default_value of this TraitSummary.

        The default value of a trait (if applicable) ex. \"0\", \"\", \"null\"  # noqa: E501

        :return: The default_value of this TraitSummary.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value: str):
        """Sets the default_value of this TraitSummary.

        The default value of a trait (if applicable) ex. \"0\", \"\", \"null\"  # noqa: E501

        :param default_value: The default_value of this TraitSummary.
        :type default_value: str
        """

        self._default_value = default_value

    @property
    def description(self) -> str:
        """Gets the description of this TraitSummary.

        The description of a trait  # noqa: E501

        :return: The description of this TraitSummary.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this TraitSummary.

        The description of a trait  # noqa: E501

        :param description: The description of this TraitSummary.
        :type description: str
        """

        self._description = description

    @property
    def name(self) -> str:
        """Gets the name of this TraitSummary.

        DEPRECATED in v1.3 - Use \"traitName\"  # noqa: E501

        :return: The name of this TraitSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this TraitSummary.

        DEPRECATED in v1.3 - Use \"traitName\"  # noqa: E501

        :param name: The name of this TraitSummary.
        :type name: str
        """

        self._name = name

    @property
    def observation_variables(self) -> List[str]:
        """Gets the observation_variables of this TraitSummary.

        List of observation variable DbIds which include this trait  # noqa: E501

        :return: The observation_variables of this TraitSummary.
        :rtype: List[str]
        """
        return self._observation_variables

    @observation_variables.setter
    def observation_variables(self, observation_variables: List[str]):
        """Sets the observation_variables of this TraitSummary.

        List of observation variable DbIds which include this trait  # noqa: E501

        :param observation_variables: The observation_variables of this TraitSummary.
        :type observation_variables: List[str]
        """

        self._observation_variables = observation_variables

    @property
    def trait_db_id(self) -> str:
        """Gets the trait_db_id of this TraitSummary.

        The ID which uniquely identifies a trait  # noqa: E501

        :return: The trait_db_id of this TraitSummary.
        :rtype: str
        """
        return self._trait_db_id

    @trait_db_id.setter
    def trait_db_id(self, trait_db_id: str):
        """Sets the trait_db_id of this TraitSummary.

        The ID which uniquely identifies a trait  # noqa: E501

        :param trait_db_id: The trait_db_id of this TraitSummary.
        :type trait_db_id: str
        """

        self._trait_db_id = trait_db_id

    @property
    def trait_id(self) -> str:
        """Gets the trait_id of this TraitSummary.

        <strong>DEPRECATED</strong> The ID which uniquely identifies a trait  # noqa: E501

        :return: The trait_id of this TraitSummary.
        :rtype: str
        """
        return self._trait_id

    @trait_id.setter
    def trait_id(self, trait_id: str):
        """Sets the trait_id of this TraitSummary.

        <strong>DEPRECATED</strong> The ID which uniquely identifies a trait  # noqa: E501

        :param trait_id: The trait_id of this TraitSummary.
        :type trait_id: str
        """

        self._trait_id = trait_id

    @property
    def trait_name(self) -> str:
        """Gets the trait_name of this TraitSummary.

        The human readable name of a trait  # noqa: E501

        :return: The trait_name of this TraitSummary.
        :rtype: str
        """
        return self._trait_name

    @trait_name.setter
    def trait_name(self, trait_name: str):
        """Sets the trait_name of this TraitSummary.

        The human readable name of a trait  # noqa: E501

        :param trait_name: The trait_name of this TraitSummary.
        :type trait_name: str
        """

        self._trait_name = trait_name
