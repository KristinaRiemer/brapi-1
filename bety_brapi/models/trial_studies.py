# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class TrialStudies(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, location_db_id: str=None, location_name: str=None, study_db_id: str=None, study_name: str=None):  # noqa: E501
        """TrialStudies - a model defined in Swagger

        :param location_db_id: The location_db_id of this TrialStudies.  # noqa: E501
        :type location_db_id: str
        :param location_name: The location_name of this TrialStudies.  # noqa: E501
        :type location_name: str
        :param study_db_id: The study_db_id of this TrialStudies.  # noqa: E501
        :type study_db_id: str
        :param study_name: The study_name of this TrialStudies.  # noqa: E501
        :type study_name: str
        """
        self.swagger_types = {
            'location_db_id': str,
            'location_name': str,
            'study_db_id': str,
            'study_name': str
        }

        self.attribute_map = {
            'location_db_id': 'locationDbId',
            'location_name': 'locationName',
            'study_db_id': 'studyDbId',
            'study_name': 'studyName'
        }

        self._location_db_id = location_db_id
        self._location_name = location_name
        self._study_db_id = study_db_id
        self._study_name = study_name

    @classmethod
    def from_dict(cls, dikt) -> 'TrialStudies':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The trial_studies of this TrialStudies.  # noqa: E501
        :rtype: TrialStudies
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_db_id(self) -> str:
        """Gets the location_db_id of this TrialStudies.


        :return: The location_db_id of this TrialStudies.
        :rtype: str
        """
        return self._location_db_id

    @location_db_id.setter
    def location_db_id(self, location_db_id: str):
        """Sets the location_db_id of this TrialStudies.


        :param location_db_id: The location_db_id of this TrialStudies.
        :type location_db_id: str
        """

        self._location_db_id = location_db_id

    @property
    def location_name(self) -> str:
        """Gets the location_name of this TrialStudies.


        :return: The location_name of this TrialStudies.
        :rtype: str
        """
        return self._location_name

    @location_name.setter
    def location_name(self, location_name: str):
        """Sets the location_name of this TrialStudies.


        :param location_name: The location_name of this TrialStudies.
        :type location_name: str
        """

        self._location_name = location_name

    @property
    def study_db_id(self) -> str:
        """Gets the study_db_id of this TrialStudies.


        :return: The study_db_id of this TrialStudies.
        :rtype: str
        """
        return self._study_db_id

    @study_db_id.setter
    def study_db_id(self, study_db_id: str):
        """Sets the study_db_id of this TrialStudies.


        :param study_db_id: The study_db_id of this TrialStudies.
        :type study_db_id: str
        """

        self._study_db_id = study_db_id

    @property
    def study_name(self) -> str:
        """Gets the study_name of this TrialStudies.


        :return: The study_name of this TrialStudies.
        :rtype: str
        """
        return self._study_name

    @study_name.setter
    def study_name(self, study_name: str):
        """Sets the study_name of this TrialStudies.


        :param study_name: The study_name of this TrialStudies.
        :type study_name: str
        """

        self._study_name = study_name
