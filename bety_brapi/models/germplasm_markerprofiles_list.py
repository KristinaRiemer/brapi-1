# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class GermplasmMarkerprofilesList(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, germplasm_db_id: str=None, markerprofile_db_ids: List[str]=None):  # noqa: E501
        """GermplasmMarkerprofilesList - a model defined in Swagger

        :param germplasm_db_id: The germplasm_db_id of this GermplasmMarkerprofilesList.  # noqa: E501
        :type germplasm_db_id: str
        :param markerprofile_db_ids: The markerprofile_db_ids of this GermplasmMarkerprofilesList.  # noqa: E501
        :type markerprofile_db_ids: List[str]
        """
        self.swagger_types = {
            'germplasm_db_id': str,
            'markerprofile_db_ids': List[str]
        }

        self.attribute_map = {
            'germplasm_db_id': 'germplasmDbId',
            'markerprofile_db_ids': 'markerprofileDbIds'
        }

        self._germplasm_db_id = germplasm_db_id
        self._markerprofile_db_ids = markerprofile_db_ids

    @classmethod
    def from_dict(cls, dikt) -> 'GermplasmMarkerprofilesList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The germplasmMarkerprofilesList of this GermplasmMarkerprofilesList.  # noqa: E501
        :rtype: GermplasmMarkerprofilesList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def germplasm_db_id(self) -> str:
        """Gets the germplasm_db_id of this GermplasmMarkerprofilesList.

        The ID which uniquely identifies a germplasm within the given database server  # noqa: E501

        :return: The germplasm_db_id of this GermplasmMarkerprofilesList.
        :rtype: str
        """
        return self._germplasm_db_id

    @germplasm_db_id.setter
    def germplasm_db_id(self, germplasm_db_id: str):
        """Sets the germplasm_db_id of this GermplasmMarkerprofilesList.

        The ID which uniquely identifies a germplasm within the given database server  # noqa: E501

        :param germplasm_db_id: The germplasm_db_id of this GermplasmMarkerprofilesList.
        :type germplasm_db_id: str
        """

        self._germplasm_db_id = germplasm_db_id

    @property
    def markerprofile_db_ids(self) -> List[str]:
        """Gets the markerprofile_db_ids of this GermplasmMarkerprofilesList.

        The ID which uniquely identifies a marker profile within the given database server  # noqa: E501

        :return: The markerprofile_db_ids of this GermplasmMarkerprofilesList.
        :rtype: List[str]
        """
        return self._markerprofile_db_ids

    @markerprofile_db_ids.setter
    def markerprofile_db_ids(self, markerprofile_db_ids: List[str]):
        """Sets the markerprofile_db_ids of this GermplasmMarkerprofilesList.

        The ID which uniquely identifies a marker profile within the given database server  # noqa: E501

        :param markerprofile_db_ids: The markerprofile_db_ids of this GermplasmMarkerprofilesList.
        :type markerprofile_db_ids: List[str]
        """

        self._markerprofile_db_ids = markerprofile_db_ids
