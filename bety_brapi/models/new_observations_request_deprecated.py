# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi.models.new_observations_request_deprecated_data import NewObservationsRequestDeprecatedData  # noqa: F401,E501
from bety_brapi import util


class NewObservationsRequestDeprecated(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, commit: str=None, data: List[NewObservationsRequestDeprecatedData]=None, transaction_db_id: str=None):  # noqa: E501
        """NewObservationsRequestDeprecated - a model defined in Swagger

        :param commit: The commit of this NewObservationsRequestDeprecated.  # noqa: E501
        :type commit: str
        :param data: The data of this NewObservationsRequestDeprecated.  # noqa: E501
        :type data: List[NewObservationsRequestDeprecatedData]
        :param transaction_db_id: The transaction_db_id of this NewObservationsRequestDeprecated.  # noqa: E501
        :type transaction_db_id: str
        """
        self.swagger_types = {
            'commit': str,
            'data': List[NewObservationsRequestDeprecatedData],
            'transaction_db_id': str
        }

        self.attribute_map = {
            'commit': 'commit',
            'data': 'data',
            'transaction_db_id': 'transactionDbId'
        }

        self._commit = commit
        self._data = data
        self._transaction_db_id = transaction_db_id

    @classmethod
    def from_dict(cls, dikt) -> 'NewObservationsRequestDeprecated':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The newObservationsRequestDeprecated of this NewObservationsRequestDeprecated.  # noqa: E501
        :rtype: NewObservationsRequestDeprecated
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commit(self) -> str:
        """Gets the commit of this NewObservationsRequestDeprecated.

        Should these changes be commited  # noqa: E501

        :return: The commit of this NewObservationsRequestDeprecated.
        :rtype: str
        """
        return self._commit

    @commit.setter
    def commit(self, commit: str):
        """Sets the commit of this NewObservationsRequestDeprecated.

        Should these changes be commited  # noqa: E501

        :param commit: The commit of this NewObservationsRequestDeprecated.
        :type commit: str
        """

        self._commit = commit

    @property
    def data(self) -> List[NewObservationsRequestDeprecatedData]:
        """Gets the data of this NewObservationsRequestDeprecated.

        <strong>Required</strong> array of marker-name/score pairs  # noqa: E501

        :return: The data of this NewObservationsRequestDeprecated.
        :rtype: List[NewObservationsRequestDeprecatedData]
        """
        return self._data

    @data.setter
    def data(self, data: List[NewObservationsRequestDeprecatedData]):
        """Sets the data of this NewObservationsRequestDeprecated.

        <strong>Required</strong> array of marker-name/score pairs  # noqa: E501

        :param data: The data of this NewObservationsRequestDeprecated.
        :type data: List[NewObservationsRequestDeprecatedData]
        """

        self._data = data

    @property
    def transaction_db_id(self) -> str:
        """Gets the transaction_db_id of this NewObservationsRequestDeprecated.

        The ID representing this transaction  # noqa: E501

        :return: The transaction_db_id of this NewObservationsRequestDeprecated.
        :rtype: str
        """
        return self._transaction_db_id

    @transaction_db_id.setter
    def transaction_db_id(self, transaction_db_id: str):
        """Sets the transaction_db_id of this NewObservationsRequestDeprecated.

        The ID representing this transaction  # noqa: E501

        :param transaction_db_id: The transaction_db_id of this NewObservationsRequestDeprecated.
        :type transaction_db_id: str
        """

        self._transaction_db_id = transaction_db_id
