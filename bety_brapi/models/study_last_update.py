# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class StudyLastUpdate(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, timestamp: datetime=None, version: str=None):  # noqa: E501
        """StudyLastUpdate - a model defined in Swagger

        :param timestamp: The timestamp of this StudyLastUpdate.  # noqa: E501
        :type timestamp: datetime
        :param version: The version of this StudyLastUpdate.  # noqa: E501
        :type version: str
        """
        self.swagger_types = {
            'timestamp': datetime,
            'version': str
        }

        self.attribute_map = {
            'timestamp': 'timestamp',
            'version': 'version'
        }

        self._timestamp = timestamp
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'StudyLastUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The study_lastUpdate of this StudyLastUpdate.  # noqa: E501
        :rtype: StudyLastUpdate
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this StudyLastUpdate.


        :return: The timestamp of this StudyLastUpdate.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this StudyLastUpdate.


        :param timestamp: The timestamp of this StudyLastUpdate.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def version(self) -> str:
        """Gets the version of this StudyLastUpdate.


        :return: The version of this StudyLastUpdate.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this StudyLastUpdate.


        :param version: The version of this StudyLastUpdate.
        :type version: str
        """

        self._version = version
