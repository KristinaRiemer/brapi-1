# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi.models.vendor_plate_request_samples import VendorPlateRequestSamples  # noqa: F401,E501
from bety_brapi import util


class VendorPlateRequestPlates(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, client_plate_db_id: str=None, plate_format: str=None, sample_type: str=None, samples: List[VendorPlateRequestSamples]=None, vendor_project_db_id: str=None):  # noqa: E501
        """VendorPlateRequestPlates - a model defined in Swagger

        :param client_plate_db_id: The client_plate_db_id of this VendorPlateRequestPlates.  # noqa: E501
        :type client_plate_db_id: str
        :param plate_format: The plate_format of this VendorPlateRequestPlates.  # noqa: E501
        :type plate_format: str
        :param sample_type: The sample_type of this VendorPlateRequestPlates.  # noqa: E501
        :type sample_type: str
        :param samples: The samples of this VendorPlateRequestPlates.  # noqa: E501
        :type samples: List[VendorPlateRequestSamples]
        :param vendor_project_db_id: The vendor_project_db_id of this VendorPlateRequestPlates.  # noqa: E501
        :type vendor_project_db_id: str
        """
        self.swagger_types = {
            'client_plate_db_id': str,
            'plate_format': str,
            'sample_type': str,
            'samples': List[VendorPlateRequestSamples],
            'vendor_project_db_id': str
        }

        self.attribute_map = {
            'client_plate_db_id': 'clientPlateDbId',
            'plate_format': 'plateFormat',
            'sample_type': 'sampleType',
            'samples': 'samples',
            'vendor_project_db_id': 'vendorProjectDbId'
        }

        self._client_plate_db_id = client_plate_db_id
        self._plate_format = plate_format
        self._sample_type = sample_type
        self._samples = samples
        self._vendor_project_db_id = vendor_project_db_id

    @classmethod
    def from_dict(cls, dikt) -> 'VendorPlateRequestPlates':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The vendorPlateRequest_plates of this VendorPlateRequestPlates.  # noqa: E501
        :rtype: VendorPlateRequestPlates
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_plate_db_id(self) -> str:
        """Gets the client_plate_db_id of this VendorPlateRequestPlates.

        The ID which uniquely identifies this plate in the clients database  # noqa: E501

        :return: The client_plate_db_id of this VendorPlateRequestPlates.
        :rtype: str
        """
        return self._client_plate_db_id

    @client_plate_db_id.setter
    def client_plate_db_id(self, client_plate_db_id: str):
        """Sets the client_plate_db_id of this VendorPlateRequestPlates.

        The ID which uniquely identifies this plate in the clients database  # noqa: E501

        :param client_plate_db_id: The client_plate_db_id of this VendorPlateRequestPlates.
        :type client_plate_db_id: str
        """

        self._client_plate_db_id = client_plate_db_id

    @property
    def plate_format(self) -> str:
        """Gets the plate_format of this VendorPlateRequestPlates.

        Defines the plate layout format, usually \"Plate_96\" for a 96 well plate or \"Tubes\" for plateless format  # noqa: E501

        :return: The plate_format of this VendorPlateRequestPlates.
        :rtype: str
        """
        return self._plate_format

    @plate_format.setter
    def plate_format(self, plate_format: str):
        """Sets the plate_format of this VendorPlateRequestPlates.

        Defines the plate layout format, usually \"Plate_96\" for a 96 well plate or \"Tubes\" for plateless format  # noqa: E501

        :param plate_format: The plate_format of this VendorPlateRequestPlates.
        :type plate_format: str
        """

        self._plate_format = plate_format

    @property
    def sample_type(self) -> str:
        """Gets the sample_type of this VendorPlateRequestPlates.


        :return: The sample_type of this VendorPlateRequestPlates.
        :rtype: str
        """
        return self._sample_type

    @sample_type.setter
    def sample_type(self, sample_type: str):
        """Sets the sample_type of this VendorPlateRequestPlates.


        :param sample_type: The sample_type of this VendorPlateRequestPlates.
        :type sample_type: str
        """

        self._sample_type = sample_type

    @property
    def samples(self) -> List[VendorPlateRequestSamples]:
        """Gets the samples of this VendorPlateRequestPlates.


        :return: The samples of this VendorPlateRequestPlates.
        :rtype: List[VendorPlateRequestSamples]
        """
        return self._samples

    @samples.setter
    def samples(self, samples: List[VendorPlateRequestSamples]):
        """Sets the samples of this VendorPlateRequestPlates.


        :param samples: The samples of this VendorPlateRequestPlates.
        :type samples: List[VendorPlateRequestSamples]
        """

        self._samples = samples

    @property
    def vendor_project_db_id(self) -> str:
        """Gets the vendor_project_db_id of this VendorPlateRequestPlates.


        :return: The vendor_project_db_id of this VendorPlateRequestPlates.
        :rtype: str
        """
        return self._vendor_project_db_id

    @vendor_project_db_id.setter
    def vendor_project_db_id(self, vendor_project_db_id: str):
        """Sets the vendor_project_db_id of this VendorPlateRequestPlates.


        :param vendor_project_db_id: The vendor_project_db_id of this VendorPlateRequestPlates.
        :type vendor_project_db_id: str
        """

        self._vendor_project_db_id = vendor_project_db_id
