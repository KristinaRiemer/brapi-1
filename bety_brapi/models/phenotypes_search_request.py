# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class PhenotypesSearchRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, germplasm_db_ids: List[str]=None, location_db_ids: List[str]=None, observation_level: str=None, observation_time_stamp_range_end: datetime=None, observation_time_stamp_range_start: datetime=None, observation_variable_db_ids: List[str]=None, page: int=None, page_size: int=None, program_db_ids: List[str]=None, season_db_ids: List[str]=None, study_db_ids: List[str]=None, trial_db_ids: List[str]=None):  # noqa: E501
        """PhenotypesSearchRequest - a model defined in Swagger

        :param germplasm_db_ids: The germplasm_db_ids of this PhenotypesSearchRequest.  # noqa: E501
        :type germplasm_db_ids: List[str]
        :param location_db_ids: The location_db_ids of this PhenotypesSearchRequest.  # noqa: E501
        :type location_db_ids: List[str]
        :param observation_level: The observation_level of this PhenotypesSearchRequest.  # noqa: E501
        :type observation_level: str
        :param observation_time_stamp_range_end: The observation_time_stamp_range_end of this PhenotypesSearchRequest.  # noqa: E501
        :type observation_time_stamp_range_end: datetime
        :param observation_time_stamp_range_start: The observation_time_stamp_range_start of this PhenotypesSearchRequest.  # noqa: E501
        :type observation_time_stamp_range_start: datetime
        :param observation_variable_db_ids: The observation_variable_db_ids of this PhenotypesSearchRequest.  # noqa: E501
        :type observation_variable_db_ids: List[str]
        :param page: The page of this PhenotypesSearchRequest.  # noqa: E501
        :type page: int
        :param page_size: The page_size of this PhenotypesSearchRequest.  # noqa: E501
        :type page_size: int
        :param program_db_ids: The program_db_ids of this PhenotypesSearchRequest.  # noqa: E501
        :type program_db_ids: List[str]
        :param season_db_ids: The season_db_ids of this PhenotypesSearchRequest.  # noqa: E501
        :type season_db_ids: List[str]
        :param study_db_ids: The study_db_ids of this PhenotypesSearchRequest.  # noqa: E501
        :type study_db_ids: List[str]
        :param trial_db_ids: The trial_db_ids of this PhenotypesSearchRequest.  # noqa: E501
        :type trial_db_ids: List[str]
        """
        self.swagger_types = {
            'germplasm_db_ids': List[str],
            'location_db_ids': List[str],
            'observation_level': str,
            'observation_time_stamp_range_end': datetime,
            'observation_time_stamp_range_start': datetime,
            'observation_variable_db_ids': List[str],
            'page': int,
            'page_size': int,
            'program_db_ids': List[str],
            'season_db_ids': List[str],
            'study_db_ids': List[str],
            'trial_db_ids': List[str]
        }

        self.attribute_map = {
            'germplasm_db_ids': 'germplasmDbIds',
            'location_db_ids': 'locationDbIds',
            'observation_level': 'observationLevel',
            'observation_time_stamp_range_end': 'observationTimeStampRangeEnd',
            'observation_time_stamp_range_start': 'observationTimeStampRangeStart',
            'observation_variable_db_ids': 'observationVariableDbIds',
            'page': 'page',
            'page_size': 'pageSize',
            'program_db_ids': 'programDbIds',
            'season_db_ids': 'seasonDbIds',
            'study_db_ids': 'studyDbIds',
            'trial_db_ids': 'trialDbIds'
        }

        self._germplasm_db_ids = germplasm_db_ids
        self._location_db_ids = location_db_ids
        self._observation_level = observation_level
        self._observation_time_stamp_range_end = observation_time_stamp_range_end
        self._observation_time_stamp_range_start = observation_time_stamp_range_start
        self._observation_variable_db_ids = observation_variable_db_ids
        self._page = page
        self._page_size = page_size
        self._program_db_ids = program_db_ids
        self._season_db_ids = season_db_ids
        self._study_db_ids = study_db_ids
        self._trial_db_ids = trial_db_ids

    @classmethod
    def from_dict(cls, dikt) -> 'PhenotypesSearchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The phenotypesSearchRequest of this PhenotypesSearchRequest.  # noqa: E501
        :rtype: PhenotypesSearchRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def germplasm_db_ids(self) -> List[str]:
        """Gets the germplasm_db_ids of this PhenotypesSearchRequest.

        The name or synonym of external genebank accession identifiers  # noqa: E501

        :return: The germplasm_db_ids of this PhenotypesSearchRequest.
        :rtype: List[str]
        """
        return self._germplasm_db_ids

    @germplasm_db_ids.setter
    def germplasm_db_ids(self, germplasm_db_ids: List[str]):
        """Sets the germplasm_db_ids of this PhenotypesSearchRequest.

        The name or synonym of external genebank accession identifiers  # noqa: E501

        :param germplasm_db_ids: The germplasm_db_ids of this PhenotypesSearchRequest.
        :type germplasm_db_ids: List[str]
        """

        self._germplasm_db_ids = germplasm_db_ids

    @property
    def location_db_ids(self) -> List[str]:
        """Gets the location_db_ids of this PhenotypesSearchRequest.

        locations these traits were collected  # noqa: E501

        :return: The location_db_ids of this PhenotypesSearchRequest.
        :rtype: List[str]
        """
        return self._location_db_ids

    @location_db_ids.setter
    def location_db_ids(self, location_db_ids: List[str]):
        """Sets the location_db_ids of this PhenotypesSearchRequest.

        locations these traits were collected  # noqa: E501

        :param location_db_ids: The location_db_ids of this PhenotypesSearchRequest.
        :type location_db_ids: List[str]
        """

        self._location_db_ids = location_db_ids

    @property
    def observation_level(self) -> str:
        """Gets the observation_level of this PhenotypesSearchRequest.

        The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnit Structure.  # noqa: E501

        :return: The observation_level of this PhenotypesSearchRequest.
        :rtype: str
        """
        return self._observation_level

    @observation_level.setter
    def observation_level(self, observation_level: str):
        """Sets the observation_level of this PhenotypesSearchRequest.

        The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnit Structure.  # noqa: E501

        :param observation_level: The observation_level of this PhenotypesSearchRequest.
        :type observation_level: str
        """

        self._observation_level = observation_level

    @property
    def observation_time_stamp_range_end(self) -> datetime:
        """Gets the observation_time_stamp_range_end of this PhenotypesSearchRequest.

        Timestamp range end  # noqa: E501

        :return: The observation_time_stamp_range_end of this PhenotypesSearchRequest.
        :rtype: datetime
        """
        return self._observation_time_stamp_range_end

    @observation_time_stamp_range_end.setter
    def observation_time_stamp_range_end(self, observation_time_stamp_range_end: datetime):
        """Sets the observation_time_stamp_range_end of this PhenotypesSearchRequest.

        Timestamp range end  # noqa: E501

        :param observation_time_stamp_range_end: The observation_time_stamp_range_end of this PhenotypesSearchRequest.
        :type observation_time_stamp_range_end: datetime
        """

        self._observation_time_stamp_range_end = observation_time_stamp_range_end

    @property
    def observation_time_stamp_range_start(self) -> datetime:
        """Gets the observation_time_stamp_range_start of this PhenotypesSearchRequest.

        Timestamp range start  # noqa: E501

        :return: The observation_time_stamp_range_start of this PhenotypesSearchRequest.
        :rtype: datetime
        """
        return self._observation_time_stamp_range_start

    @observation_time_stamp_range_start.setter
    def observation_time_stamp_range_start(self, observation_time_stamp_range_start: datetime):
        """Sets the observation_time_stamp_range_start of this PhenotypesSearchRequest.

        Timestamp range start  # noqa: E501

        :param observation_time_stamp_range_start: The observation_time_stamp_range_start of this PhenotypesSearchRequest.
        :type observation_time_stamp_range_start: datetime
        """

        self._observation_time_stamp_range_start = observation_time_stamp_range_start

    @property
    def observation_variable_db_ids(self) -> List[str]:
        """Gets the observation_variable_db_ids of this PhenotypesSearchRequest.

        The IDs of traits, could be ontology ID, database ID or PUI  # noqa: E501

        :return: The observation_variable_db_ids of this PhenotypesSearchRequest.
        :rtype: List[str]
        """
        return self._observation_variable_db_ids

    @observation_variable_db_ids.setter
    def observation_variable_db_ids(self, observation_variable_db_ids: List[str]):
        """Sets the observation_variable_db_ids of this PhenotypesSearchRequest.

        The IDs of traits, could be ontology ID, database ID or PUI  # noqa: E501

        :param observation_variable_db_ids: The observation_variable_db_ids of this PhenotypesSearchRequest.
        :type observation_variable_db_ids: List[str]
        """

        self._observation_variable_db_ids = observation_variable_db_ids

    @property
    def page(self) -> int:
        """Gets the page of this PhenotypesSearchRequest.

        Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.  # noqa: E501

        :return: The page of this PhenotypesSearchRequest.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page: int):
        """Sets the page of this PhenotypesSearchRequest.

        Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.  # noqa: E501

        :param page: The page of this PhenotypesSearchRequest.
        :type page: int
        """

        self._page = page

    @property
    def page_size(self) -> int:
        """Gets the page_size of this PhenotypesSearchRequest.

        The maximum number of items to return per page of the \"data\" array. Default is 1000.  # noqa: E501

        :return: The page_size of this PhenotypesSearchRequest.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size: int):
        """Sets the page_size of this PhenotypesSearchRequest.

        The maximum number of items to return per page of the \"data\" array. Default is 1000.  # noqa: E501

        :param page_size: The page_size of this PhenotypesSearchRequest.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def program_db_ids(self) -> List[str]:
        """Gets the program_db_ids of this PhenotypesSearchRequest.

        list of programs to search across  # noqa: E501

        :return: The program_db_ids of this PhenotypesSearchRequest.
        :rtype: List[str]
        """
        return self._program_db_ids

    @program_db_ids.setter
    def program_db_ids(self, program_db_ids: List[str]):
        """Sets the program_db_ids of this PhenotypesSearchRequest.

        list of programs to search across  # noqa: E501

        :param program_db_ids: The program_db_ids of this PhenotypesSearchRequest.
        :type program_db_ids: List[str]
        """

        self._program_db_ids = program_db_ids

    @property
    def season_db_ids(self) -> List[str]:
        """Gets the season_db_ids of this PhenotypesSearchRequest.

        The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)  # noqa: E501

        :return: The season_db_ids of this PhenotypesSearchRequest.
        :rtype: List[str]
        """
        return self._season_db_ids

    @season_db_ids.setter
    def season_db_ids(self, season_db_ids: List[str]):
        """Sets the season_db_ids of this PhenotypesSearchRequest.

        The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)  # noqa: E501

        :param season_db_ids: The season_db_ids of this PhenotypesSearchRequest.
        :type season_db_ids: List[str]
        """

        self._season_db_ids = season_db_ids

    @property
    def study_db_ids(self) -> List[str]:
        """Gets the study_db_ids of this PhenotypesSearchRequest.

        The database ID / PK of the studies search parameter  # noqa: E501

        :return: The study_db_ids of this PhenotypesSearchRequest.
        :rtype: List[str]
        """
        return self._study_db_ids

    @study_db_ids.setter
    def study_db_ids(self, study_db_ids: List[str]):
        """Sets the study_db_ids of this PhenotypesSearchRequest.

        The database ID / PK of the studies search parameter  # noqa: E501

        :param study_db_ids: The study_db_ids of this PhenotypesSearchRequest.
        :type study_db_ids: List[str]
        """

        self._study_db_ids = study_db_ids

    @property
    def trial_db_ids(self) -> List[str]:
        """Gets the trial_db_ids of this PhenotypesSearchRequest.

        list of trials to search across  # noqa: E501

        :return: The trial_db_ids of this PhenotypesSearchRequest.
        :rtype: List[str]
        """
        return self._trial_db_ids

    @trial_db_ids.setter
    def trial_db_ids(self, trial_db_ids: List[str]):
        """Sets the trial_db_ids of this PhenotypesSearchRequest.

        list of trials to search across  # noqa: E501

        :param trial_db_ids: The trial_db_ids of this PhenotypesSearchRequest.
        :type trial_db_ids: List[str]
        """

        self._trial_db_ids = trial_db_ids
