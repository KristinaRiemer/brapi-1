# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class ObservationVariableSearchRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, datatypes: List[str]=None, method_db_ids: List[str]=None, names: List[str]=None, observation_variable_db_ids: List[str]=None, ontology_db_ids: List[str]=None, ontology_xrefs: List[str]=None, page: int=None, page_size: int=None, scale_db_ids: List[str]=None, trait_classes: List[str]=None):  # noqa: E501
        """ObservationVariableSearchRequest - a model defined in Swagger

        :param datatypes: The datatypes of this ObservationVariableSearchRequest.  # noqa: E501
        :type datatypes: List[str]
        :param method_db_ids: The method_db_ids of this ObservationVariableSearchRequest.  # noqa: E501
        :type method_db_ids: List[str]
        :param names: The names of this ObservationVariableSearchRequest.  # noqa: E501
        :type names: List[str]
        :param observation_variable_db_ids: The observation_variable_db_ids of this ObservationVariableSearchRequest.  # noqa: E501
        :type observation_variable_db_ids: List[str]
        :param ontology_db_ids: The ontology_db_ids of this ObservationVariableSearchRequest.  # noqa: E501
        :type ontology_db_ids: List[str]
        :param ontology_xrefs: The ontology_xrefs of this ObservationVariableSearchRequest.  # noqa: E501
        :type ontology_xrefs: List[str]
        :param page: The page of this ObservationVariableSearchRequest.  # noqa: E501
        :type page: int
        :param page_size: The page_size of this ObservationVariableSearchRequest.  # noqa: E501
        :type page_size: int
        :param scale_db_ids: The scale_db_ids of this ObservationVariableSearchRequest.  # noqa: E501
        :type scale_db_ids: List[str]
        :param trait_classes: The trait_classes of this ObservationVariableSearchRequest.  # noqa: E501
        :type trait_classes: List[str]
        """
        self.swagger_types = {
            'datatypes': List[str],
            'method_db_ids': List[str],
            'names': List[str],
            'observation_variable_db_ids': List[str],
            'ontology_db_ids': List[str],
            'ontology_xrefs': List[str],
            'page': int,
            'page_size': int,
            'scale_db_ids': List[str],
            'trait_classes': List[str]
        }

        self.attribute_map = {
            'datatypes': 'datatypes',
            'method_db_ids': 'methodDbIds',
            'names': 'names',
            'observation_variable_db_ids': 'observationVariableDbIds',
            'ontology_db_ids': 'ontologyDbIds',
            'ontology_xrefs': 'ontologyXrefs',
            'page': 'page',
            'page_size': 'pageSize',
            'scale_db_ids': 'scaleDbIds',
            'trait_classes': 'traitClasses'
        }

        self._datatypes = datatypes
        self._method_db_ids = method_db_ids
        self._names = names
        self._observation_variable_db_ids = observation_variable_db_ids
        self._ontology_db_ids = ontology_db_ids
        self._ontology_xrefs = ontology_xrefs
        self._page = page
        self._page_size = page_size
        self._scale_db_ids = scale_db_ids
        self._trait_classes = trait_classes

    @classmethod
    def from_dict(cls, dikt) -> 'ObservationVariableSearchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The observationVariableSearchRequest of this ObservationVariableSearchRequest.  # noqa: E501
        :rtype: ObservationVariableSearchRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datatypes(self) -> List[str]:
        """Gets the datatypes of this ObservationVariableSearchRequest.

        List of scale data types to filter search results  # noqa: E501

        :return: The datatypes of this ObservationVariableSearchRequest.
        :rtype: List[str]
        """
        return self._datatypes

    @datatypes.setter
    def datatypes(self, datatypes: List[str]):
        """Sets the datatypes of this ObservationVariableSearchRequest.

        List of scale data types to filter search results  # noqa: E501

        :param datatypes: The datatypes of this ObservationVariableSearchRequest.
        :type datatypes: List[str]
        """

        self._datatypes = datatypes

    @property
    def method_db_ids(self) -> List[str]:
        """Gets the method_db_ids of this ObservationVariableSearchRequest.

        List of methods to filter search results  # noqa: E501

        :return: The method_db_ids of this ObservationVariableSearchRequest.
        :rtype: List[str]
        """
        return self._method_db_ids

    @method_db_ids.setter
    def method_db_ids(self, method_db_ids: List[str]):
        """Sets the method_db_ids of this ObservationVariableSearchRequest.

        List of methods to filter search results  # noqa: E501

        :param method_db_ids: The method_db_ids of this ObservationVariableSearchRequest.
        :type method_db_ids: List[str]
        """

        self._method_db_ids = method_db_ids

    @property
    def names(self) -> List[str]:
        """Gets the names of this ObservationVariableSearchRequest.

        List of human readable observation variable names to search for  # noqa: E501

        :return: The names of this ObservationVariableSearchRequest.
        :rtype: List[str]
        """
        return self._names

    @names.setter
    def names(self, names: List[str]):
        """Sets the names of this ObservationVariableSearchRequest.

        List of human readable observation variable names to search for  # noqa: E501

        :param names: The names of this ObservationVariableSearchRequest.
        :type names: List[str]
        """

        self._names = names

    @property
    def observation_variable_db_ids(self) -> List[str]:
        """Gets the observation_variable_db_ids of this ObservationVariableSearchRequest.

        List of observation variable IDs to search for  # noqa: E501

        :return: The observation_variable_db_ids of this ObservationVariableSearchRequest.
        :rtype: List[str]
        """
        return self._observation_variable_db_ids

    @observation_variable_db_ids.setter
    def observation_variable_db_ids(self, observation_variable_db_ids: List[str]):
        """Sets the observation_variable_db_ids of this ObservationVariableSearchRequest.

        List of observation variable IDs to search for  # noqa: E501

        :param observation_variable_db_ids: The observation_variable_db_ids of this ObservationVariableSearchRequest.
        :type observation_variable_db_ids: List[str]
        """

        self._observation_variable_db_ids = observation_variable_db_ids

    @property
    def ontology_db_ids(self) -> List[str]:
        """Gets the ontology_db_ids of this ObservationVariableSearchRequest.

        List of ontology IDs to search for  # noqa: E501

        :return: The ontology_db_ids of this ObservationVariableSearchRequest.
        :rtype: List[str]
        """
        return self._ontology_db_ids

    @ontology_db_ids.setter
    def ontology_db_ids(self, ontology_db_ids: List[str]):
        """Sets the ontology_db_ids of this ObservationVariableSearchRequest.

        List of ontology IDs to search for  # noqa: E501

        :param ontology_db_ids: The ontology_db_ids of this ObservationVariableSearchRequest.
        :type ontology_db_ids: List[str]
        """

        self._ontology_db_ids = ontology_db_ids

    @property
    def ontology_xrefs(self) -> List[str]:
        """Gets the ontology_xrefs of this ObservationVariableSearchRequest.

        List of ontology IDs to search for  # noqa: E501

        :return: The ontology_xrefs of this ObservationVariableSearchRequest.
        :rtype: List[str]
        """
        return self._ontology_xrefs

    @ontology_xrefs.setter
    def ontology_xrefs(self, ontology_xrefs: List[str]):
        """Sets the ontology_xrefs of this ObservationVariableSearchRequest.

        List of ontology IDs to search for  # noqa: E501

        :param ontology_xrefs: The ontology_xrefs of this ObservationVariableSearchRequest.
        :type ontology_xrefs: List[str]
        """

        self._ontology_xrefs = ontology_xrefs

    @property
    def page(self) -> int:
        """Gets the page of this ObservationVariableSearchRequest.

        Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.  # noqa: E501

        :return: The page of this ObservationVariableSearchRequest.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page: int):
        """Sets the page of this ObservationVariableSearchRequest.

        Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.  # noqa: E501

        :param page: The page of this ObservationVariableSearchRequest.
        :type page: int
        """

        self._page = page

    @property
    def page_size(self) -> int:
        """Gets the page_size of this ObservationVariableSearchRequest.

        The maximum number of items to return per page of the \"data\" array. Default is 1000.  # noqa: E501

        :return: The page_size of this ObservationVariableSearchRequest.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size: int):
        """Sets the page_size of this ObservationVariableSearchRequest.

        The maximum number of items to return per page of the \"data\" array. Default is 1000.  # noqa: E501

        :param page_size: The page_size of this ObservationVariableSearchRequest.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def scale_db_ids(self) -> List[str]:
        """Gets the scale_db_ids of this ObservationVariableSearchRequest.

        List of scales to filter search results  # noqa: E501

        :return: The scale_db_ids of this ObservationVariableSearchRequest.
        :rtype: List[str]
        """
        return self._scale_db_ids

    @scale_db_ids.setter
    def scale_db_ids(self, scale_db_ids: List[str]):
        """Sets the scale_db_ids of this ObservationVariableSearchRequest.

        List of scales to filter search results  # noqa: E501

        :param scale_db_ids: The scale_db_ids of this ObservationVariableSearchRequest.
        :type scale_db_ids: List[str]
        """

        self._scale_db_ids = scale_db_ids

    @property
    def trait_classes(self) -> List[str]:
        """Gets the trait_classes of this ObservationVariableSearchRequest.

        List of trait classes to filter search results  # noqa: E501

        :return: The trait_classes of this ObservationVariableSearchRequest.
        :rtype: List[str]
        """
        return self._trait_classes

    @trait_classes.setter
    def trait_classes(self, trait_classes: List[str]):
        """Sets the trait_classes of this ObservationVariableSearchRequest.

        List of trait classes to filter search results  # noqa: E501

        :param trait_classes: The trait_classes of this ObservationVariableSearchRequest.
        :type trait_classes: List[str]
        """

        self._trait_classes = trait_classes
