# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class ObservationUnitsTableResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, data: List[List[str]]=None, header_row: List[str]=None, observation_variable_db_ids: List[str]=None, observation_variable_names: List[str]=None):  # noqa: E501
        """ObservationUnitsTableResponse - a model defined in Swagger

        :param data: The data of this ObservationUnitsTableResponse.  # noqa: E501
        :type data: List[List[str]]
        :param header_row: The header_row of this ObservationUnitsTableResponse.  # noqa: E501
        :type header_row: List[str]
        :param observation_variable_db_ids: The observation_variable_db_ids of this ObservationUnitsTableResponse.  # noqa: E501
        :type observation_variable_db_ids: List[str]
        :param observation_variable_names: The observation_variable_names of this ObservationUnitsTableResponse.  # noqa: E501
        :type observation_variable_names: List[str]
        """
        self.swagger_types = {
            'data': List[List[str]],
            'header_row': List[str],
            'observation_variable_db_ids': List[str],
            'observation_variable_names': List[str]
        }

        self.attribute_map = {
            'data': 'data',
            'header_row': 'headerRow',
            'observation_variable_db_ids': 'observationVariableDbIds',
            'observation_variable_names': 'observationVariableNames'
        }

        self._data = data
        self._header_row = header_row
        self._observation_variable_db_ids = observation_variable_db_ids
        self._observation_variable_names = observation_variable_names

    @classmethod
    def from_dict(cls, dikt) -> 'ObservationUnitsTableResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The observationUnitsTableResponse of this ObservationUnitsTableResponse.  # noqa: E501
        :rtype: ObservationUnitsTableResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self) -> List[List[str]]:
        """Gets the data of this ObservationUnitsTableResponse.

        Matrix of observation meta-data and recorded values. Each inner array represents 1 row of data.  # noqa: E501

        :return: The data of this ObservationUnitsTableResponse.
        :rtype: List[List[str]]
        """
        return self._data

    @data.setter
    def data(self, data: List[List[str]]):
        """Sets the data of this ObservationUnitsTableResponse.

        Matrix of observation meta-data and recorded values. Each inner array represents 1 row of data.  # noqa: E501

        :param data: The data of this ObservationUnitsTableResponse.
        :type data: List[List[str]]
        """

        self._data = data

    @property
    def header_row(self) -> List[str]:
        """Gets the header_row of this ObservationUnitsTableResponse.

        Names of the columns included in the data matrix. Any or All of [ \"year\",\"studyDbId\",\"studyName\",\"locationDbId\",\"locationName\",\"germplasmDbId\",\"germplasmName\",\"observationUnitDbId\",\"plotNumber\",\"replicate\",\"blockNumber\", \"observationTimestamp\", \"entryType\", \"X\", \"Y\"]  # noqa: E501

        :return: The header_row of this ObservationUnitsTableResponse.
        :rtype: List[str]
        """
        return self._header_row

    @header_row.setter
    def header_row(self, header_row: List[str]):
        """Sets the header_row of this ObservationUnitsTableResponse.

        Names of the columns included in the data matrix. Any or All of [ \"year\",\"studyDbId\",\"studyName\",\"locationDbId\",\"locationName\",\"germplasmDbId\",\"germplasmName\",\"observationUnitDbId\",\"plotNumber\",\"replicate\",\"blockNumber\", \"observationTimestamp\", \"entryType\", \"X\", \"Y\"]  # noqa: E501

        :param header_row: The header_row of this ObservationUnitsTableResponse.
        :type header_row: List[str]
        """

        self._header_row = header_row

    @property
    def observation_variable_db_ids(self) -> List[str]:
        """Gets the observation_variable_db_ids of this ObservationUnitsTableResponse.

        Array of observation variable DbIds for the collected data. This array is appended to the \"headerRow\" to get the complete header of the data matrix  # noqa: E501

        :return: The observation_variable_db_ids of this ObservationUnitsTableResponse.
        :rtype: List[str]
        """
        return self._observation_variable_db_ids

    @observation_variable_db_ids.setter
    def observation_variable_db_ids(self, observation_variable_db_ids: List[str]):
        """Sets the observation_variable_db_ids of this ObservationUnitsTableResponse.

        Array of observation variable DbIds for the collected data. This array is appended to the \"headerRow\" to get the complete header of the data matrix  # noqa: E501

        :param observation_variable_db_ids: The observation_variable_db_ids of this ObservationUnitsTableResponse.
        :type observation_variable_db_ids: List[str]
        """

        self._observation_variable_db_ids = observation_variable_db_ids

    @property
    def observation_variable_names(self) -> List[str]:
        """Gets the observation_variable_names of this ObservationUnitsTableResponse.

        Human readable names of the observation variables for the collected data. This array should match 1 to 1 with the \"observationVariableDbIds\" array.  # noqa: E501

        :return: The observation_variable_names of this ObservationUnitsTableResponse.
        :rtype: List[str]
        """
        return self._observation_variable_names

    @observation_variable_names.setter
    def observation_variable_names(self, observation_variable_names: List[str]):
        """Sets the observation_variable_names of this ObservationUnitsTableResponse.

        Human readable names of the observation variables for the collected data. This array should match 1 to 1 with the \"observationVariableDbIds\" array.  # noqa: E501

        :param observation_variable_names: The observation_variable_names of this ObservationUnitsTableResponse.
        :type observation_variable_names: List[str]
        """

        self._observation_variable_names = observation_variable_names
