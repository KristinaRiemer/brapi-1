# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class Observation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, germplasm_db_id: str=None, germplasm_name: str=None, observation_db_id: str=None, observation_level: str=None, observation_time_stamp: datetime=None, observation_unit_db_id: str=None, observation_unit_name: str=None, observation_variable_db_id: str=None, observation_variable_name: str=None, operator: str=None, study_db_id: str=None, uploaded_by: str=None, value: str=None):  # noqa: E501
        """Observation - a model defined in Swagger

        :param germplasm_db_id: The germplasm_db_id of this Observation.  # noqa: E501
        :type germplasm_db_id: str
        :param germplasm_name: The germplasm_name of this Observation.  # noqa: E501
        :type germplasm_name: str
        :param observation_db_id: The observation_db_id of this Observation.  # noqa: E501
        :type observation_db_id: str
        :param observation_level: The observation_level of this Observation.  # noqa: E501
        :type observation_level: str
        :param observation_time_stamp: The observation_time_stamp of this Observation.  # noqa: E501
        :type observation_time_stamp: datetime
        :param observation_unit_db_id: The observation_unit_db_id of this Observation.  # noqa: E501
        :type observation_unit_db_id: str
        :param observation_unit_name: The observation_unit_name of this Observation.  # noqa: E501
        :type observation_unit_name: str
        :param observation_variable_db_id: The observation_variable_db_id of this Observation.  # noqa: E501
        :type observation_variable_db_id: str
        :param observation_variable_name: The observation_variable_name of this Observation.  # noqa: E501
        :type observation_variable_name: str
        :param operator: The operator of this Observation.  # noqa: E501
        :type operator: str
        :param study_db_id: The study_db_id of this Observation.  # noqa: E501
        :type study_db_id: str
        :param uploaded_by: The uploaded_by of this Observation.  # noqa: E501
        :type uploaded_by: str
        :param value: The value of this Observation.  # noqa: E501
        :type value: str
        """
        self.swagger_types = {
            'germplasm_db_id': str,
            'germplasm_name': str,
            'observation_db_id': str,
            'observation_level': str,
            'observation_time_stamp': datetime,
            'observation_unit_db_id': str,
            'observation_unit_name': str,
            'observation_variable_db_id': str,
            'observation_variable_name': str,
            'operator': str,
            'study_db_id': str,
            'uploaded_by': str,
            'value': str
        }

        self.attribute_map = {
            'germplasm_db_id': 'germplasmDbId',
            'germplasm_name': 'germplasmName',
            'observation_db_id': 'observationDbId',
            'observation_level': 'observationLevel',
            'observation_time_stamp': 'observationTimeStamp',
            'observation_unit_db_id': 'observationUnitDbId',
            'observation_unit_name': 'observationUnitName',
            'observation_variable_db_id': 'observationVariableDbId',
            'observation_variable_name': 'observationVariableName',
            'operator': 'operator',
            'study_db_id': 'studyDbId',
            'uploaded_by': 'uploadedBy',
            'value': 'value'
        }

        self._germplasm_db_id = germplasm_db_id
        self._germplasm_name = germplasm_name
        self._observation_db_id = observation_db_id
        self._observation_level = observation_level
        self._observation_time_stamp = observation_time_stamp
        self._observation_unit_db_id = observation_unit_db_id
        self._observation_unit_name = observation_unit_name
        self._observation_variable_db_id = observation_variable_db_id
        self._observation_variable_name = observation_variable_name
        self._operator = operator
        self._study_db_id = study_db_id
        self._uploaded_by = uploaded_by
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'Observation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The observation of this Observation.  # noqa: E501
        :rtype: Observation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def germplasm_db_id(self) -> str:
        """Gets the germplasm_db_id of this Observation.

         The ID which uniquely identifies a germplasm  # noqa: E501

        :return: The germplasm_db_id of this Observation.
        :rtype: str
        """
        return self._germplasm_db_id

    @germplasm_db_id.setter
    def germplasm_db_id(self, germplasm_db_id: str):
        """Sets the germplasm_db_id of this Observation.

         The ID which uniquely identifies a germplasm  # noqa: E501

        :param germplasm_db_id: The germplasm_db_id of this Observation.
        :type germplasm_db_id: str
        """

        self._germplasm_db_id = germplasm_db_id

    @property
    def germplasm_name(self) -> str:
        """Gets the germplasm_name of this Observation.

        Name of the germplasm. It can be the prefered name and does not have to be unique.  # noqa: E501

        :return: The germplasm_name of this Observation.
        :rtype: str
        """
        return self._germplasm_name

    @germplasm_name.setter
    def germplasm_name(self, germplasm_name: str):
        """Sets the germplasm_name of this Observation.

        Name of the germplasm. It can be the prefered name and does not have to be unique.  # noqa: E501

        :param germplasm_name: The germplasm_name of this Observation.
        :type germplasm_name: str
        """

        self._germplasm_name = germplasm_name

    @property
    def observation_db_id(self) -> str:
        """Gets the observation_db_id of this Observation.

        The ID which uniquely identifies an observation  # noqa: E501

        :return: The observation_db_id of this Observation.
        :rtype: str
        """
        return self._observation_db_id

    @observation_db_id.setter
    def observation_db_id(self, observation_db_id: str):
        """Sets the observation_db_id of this Observation.

        The ID which uniquely identifies an observation  # noqa: E501

        :param observation_db_id: The observation_db_id of this Observation.
        :type observation_db_id: str
        """

        self._observation_db_id = observation_db_id

    @property
    def observation_level(self) -> str:
        """Gets the observation_level of this Observation.

        The level of an observation unit. ex. \"plot\", \"plant\"  # noqa: E501

        :return: The observation_level of this Observation.
        :rtype: str
        """
        return self._observation_level

    @observation_level.setter
    def observation_level(self, observation_level: str):
        """Sets the observation_level of this Observation.

        The level of an observation unit. ex. \"plot\", \"plant\"  # noqa: E501

        :param observation_level: The observation_level of this Observation.
        :type observation_level: str
        """

        self._observation_level = observation_level

    @property
    def observation_time_stamp(self) -> datetime:
        """Gets the observation_time_stamp of this Observation.

        The date and time  when this observation was made   # noqa: E501

        :return: The observation_time_stamp of this Observation.
        :rtype: datetime
        """
        return self._observation_time_stamp

    @observation_time_stamp.setter
    def observation_time_stamp(self, observation_time_stamp: datetime):
        """Sets the observation_time_stamp of this Observation.

        The date and time  when this observation was made   # noqa: E501

        :param observation_time_stamp: The observation_time_stamp of this Observation.
        :type observation_time_stamp: datetime
        """

        self._observation_time_stamp = observation_time_stamp

    @property
    def observation_unit_db_id(self) -> str:
        """Gets the observation_unit_db_id of this Observation.

        The ID which uniquely identifies an observation unit  # noqa: E501

        :return: The observation_unit_db_id of this Observation.
        :rtype: str
        """
        return self._observation_unit_db_id

    @observation_unit_db_id.setter
    def observation_unit_db_id(self, observation_unit_db_id: str):
        """Sets the observation_unit_db_id of this Observation.

        The ID which uniquely identifies an observation unit  # noqa: E501

        :param observation_unit_db_id: The observation_unit_db_id of this Observation.
        :type observation_unit_db_id: str
        """

        self._observation_unit_db_id = observation_unit_db_id

    @property
    def observation_unit_name(self) -> str:
        """Gets the observation_unit_name of this Observation.

        A human readable name for an observation unit  # noqa: E501

        :return: The observation_unit_name of this Observation.
        :rtype: str
        """
        return self._observation_unit_name

    @observation_unit_name.setter
    def observation_unit_name(self, observation_unit_name: str):
        """Sets the observation_unit_name of this Observation.

        A human readable name for an observation unit  # noqa: E501

        :param observation_unit_name: The observation_unit_name of this Observation.
        :type observation_unit_name: str
        """

        self._observation_unit_name = observation_unit_name

    @property
    def observation_variable_db_id(self) -> str:
        """Gets the observation_variable_db_id of this Observation.

        The ID which uniquely identifies an observation variable  # noqa: E501

        :return: The observation_variable_db_id of this Observation.
        :rtype: str
        """
        return self._observation_variable_db_id

    @observation_variable_db_id.setter
    def observation_variable_db_id(self, observation_variable_db_id: str):
        """Sets the observation_variable_db_id of this Observation.

        The ID which uniquely identifies an observation variable  # noqa: E501

        :param observation_variable_db_id: The observation_variable_db_id of this Observation.
        :type observation_variable_db_id: str
        """

        self._observation_variable_db_id = observation_variable_db_id

    @property
    def observation_variable_name(self) -> str:
        """Gets the observation_variable_name of this Observation.

        A human readable name for an observation variable  # noqa: E501

        :return: The observation_variable_name of this Observation.
        :rtype: str
        """
        return self._observation_variable_name

    @observation_variable_name.setter
    def observation_variable_name(self, observation_variable_name: str):
        """Sets the observation_variable_name of this Observation.

        A human readable name for an observation variable  # noqa: E501

        :param observation_variable_name: The observation_variable_name of this Observation.
        :type observation_variable_name: str
        """

        self._observation_variable_name = observation_variable_name

    @property
    def operator(self) -> str:
        """Gets the operator of this Observation.

        The name or identifier of the entity which collected the observation  # noqa: E501

        :return: The operator of this Observation.
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator: str):
        """Sets the operator of this Observation.

        The name or identifier of the entity which collected the observation  # noqa: E501

        :param operator: The operator of this Observation.
        :type operator: str
        """

        self._operator = operator

    @property
    def study_db_id(self) -> str:
        """Gets the study_db_id of this Observation.

        The ID which uniquely identifies a study within the given database server  # noqa: E501

        :return: The study_db_id of this Observation.
        :rtype: str
        """
        return self._study_db_id

    @study_db_id.setter
    def study_db_id(self, study_db_id: str):
        """Sets the study_db_id of this Observation.

        The ID which uniquely identifies a study within the given database server  # noqa: E501

        :param study_db_id: The study_db_id of this Observation.
        :type study_db_id: str
        """

        self._study_db_id = study_db_id

    @property
    def uploaded_by(self) -> str:
        """Gets the uploaded_by of this Observation.

        The name or id of the user who uploaded the observation to the database system  # noqa: E501

        :return: The uploaded_by of this Observation.
        :rtype: str
        """
        return self._uploaded_by

    @uploaded_by.setter
    def uploaded_by(self, uploaded_by: str):
        """Sets the uploaded_by of this Observation.

        The name or id of the user who uploaded the observation to the database system  # noqa: E501

        :param uploaded_by: The uploaded_by of this Observation.
        :type uploaded_by: str
        """

        self._uploaded_by = uploaded_by

    @property
    def value(self) -> str:
        """Gets the value of this Observation.

        The value of the data collected as an observation  # noqa: E501

        :return: The value of this Observation.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this Observation.

        The value of the data collected as an observation  # noqa: E501

        :param value: The value of this Observation.
        :type value: str
        """

        self._value = value
