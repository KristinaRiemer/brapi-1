# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class AlleleMatrixValues(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, data: List[List[str]]=None):  # noqa: E501
        """AlleleMatrixValues - a model defined in Swagger

        :param data: The data of this AlleleMatrixValues.  # noqa: E501
        :type data: List[List[str]]
        """
        self.swagger_types = {
            'data': List[List[str]]
        }

        self.attribute_map = {
            'data': 'data'
        }

        self._data = data

    @classmethod
    def from_dict(cls, dikt) -> 'AlleleMatrixValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The alleleMatrixValues of this AlleleMatrixValues.  # noqa: E501
        :rtype: AlleleMatrixValues
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self) -> List[List[str]]:
        """Gets the data of this AlleleMatrixValues.

        Is an array of arrays; each inner array has three entries: ```markerDbId```, ```markerprofileDbId```, ```alleleCall```. Scores have to be represented as described further up. e.g. unknown data as \"N\", etc. Missing data can be skipped.  # noqa: E501

        :return: The data of this AlleleMatrixValues.
        :rtype: List[List[str]]
        """
        return self._data

    @data.setter
    def data(self, data: List[List[str]]):
        """Sets the data of this AlleleMatrixValues.

        Is an array of arrays; each inner array has three entries: ```markerDbId```, ```markerprofileDbId```, ```alleleCall```. Scores have to be represented as described further up. e.g. unknown data as \"N\", etc. Missing data can be skipped.  # noqa: E501

        :param data: The data of this AlleleMatrixValues.
        :type data: List[List[str]]
        """

        self._data = data
