# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class GermplasmAttribute(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, attribute_code: str=None, attribute_db_id: str=None, attribute_name: str=None, determined_date: date=None, value: str=None):  # noqa: E501
        """GermplasmAttribute - a model defined in Swagger

        :param attribute_code: The attribute_code of this GermplasmAttribute.  # noqa: E501
        :type attribute_code: str
        :param attribute_db_id: The attribute_db_id of this GermplasmAttribute.  # noqa: E501
        :type attribute_db_id: str
        :param attribute_name: The attribute_name of this GermplasmAttribute.  # noqa: E501
        :type attribute_name: str
        :param determined_date: The determined_date of this GermplasmAttribute.  # noqa: E501
        :type determined_date: date
        :param value: The value of this GermplasmAttribute.  # noqa: E501
        :type value: str
        """
        self.swagger_types = {
            'attribute_code': str,
            'attribute_db_id': str,
            'attribute_name': str,
            'determined_date': date,
            'value': str
        }

        self.attribute_map = {
            'attribute_code': 'attributeCode',
            'attribute_db_id': 'attributeDbId',
            'attribute_name': 'attributeName',
            'determined_date': 'determinedDate',
            'value': 'value'
        }

        self._attribute_code = attribute_code
        self._attribute_db_id = attribute_db_id
        self._attribute_name = attribute_name
        self._determined_date = determined_date
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'GermplasmAttribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The germplasmAttribute of this GermplasmAttribute.  # noqa: E501
        :rtype: GermplasmAttribute
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_code(self) -> str:
        """Gets the attribute_code of this GermplasmAttribute.

        Short abbreviation which represents this attribute  # noqa: E501

        :return: The attribute_code of this GermplasmAttribute.
        :rtype: str
        """
        return self._attribute_code

    @attribute_code.setter
    def attribute_code(self, attribute_code: str):
        """Sets the attribute_code of this GermplasmAttribute.

        Short abbreviation which represents this attribute  # noqa: E501

        :param attribute_code: The attribute_code of this GermplasmAttribute.
        :type attribute_code: str
        """

        self._attribute_code = attribute_code

    @property
    def attribute_db_id(self) -> str:
        """Gets the attribute_db_id of this GermplasmAttribute.

        The ID which uniquely identifies this attribute within the given database server  # noqa: E501

        :return: The attribute_db_id of this GermplasmAttribute.
        :rtype: str
        """
        return self._attribute_db_id

    @attribute_db_id.setter
    def attribute_db_id(self, attribute_db_id: str):
        """Sets the attribute_db_id of this GermplasmAttribute.

        The ID which uniquely identifies this attribute within the given database server  # noqa: E501

        :param attribute_db_id: The attribute_db_id of this GermplasmAttribute.
        :type attribute_db_id: str
        """

        self._attribute_db_id = attribute_db_id

    @property
    def attribute_name(self) -> str:
        """Gets the attribute_name of this GermplasmAttribute.

        The human readable name of this attribute  # noqa: E501

        :return: The attribute_name of this GermplasmAttribute.
        :rtype: str
        """
        return self._attribute_name

    @attribute_name.setter
    def attribute_name(self, attribute_name: str):
        """Sets the attribute_name of this GermplasmAttribute.

        The human readable name of this attribute  # noqa: E501

        :param attribute_name: The attribute_name of this GermplasmAttribute.
        :type attribute_name: str
        """

        self._attribute_name = attribute_name

    @property
    def determined_date(self) -> date:
        """Gets the determined_date of this GermplasmAttribute.

        The date the value of this attribute was determined for a given germplasm  # noqa: E501

        :return: The determined_date of this GermplasmAttribute.
        :rtype: date
        """
        return self._determined_date

    @determined_date.setter
    def determined_date(self, determined_date: date):
        """Sets the determined_date of this GermplasmAttribute.

        The date the value of this attribute was determined for a given germplasm  # noqa: E501

        :param determined_date: The determined_date of this GermplasmAttribute.
        :type determined_date: date
        """

        self._determined_date = determined_date

    @property
    def value(self) -> str:
        """Gets the value of this GermplasmAttribute.

        The value of this attribute for a given germplasm  # noqa: E501

        :return: The value of this GermplasmAttribute.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this GermplasmAttribute.

        The value of this attribute for a given germplasm  # noqa: E501

        :param value: The value of this GermplasmAttribute.
        :type value: str
        """

        self._value = value
