# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class SampleSearchRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, germplasm_db_id: List[str]=None, observation_unit_db_id: List[str]=None, page: int=None, page_size: int=None, plate_db_id: List[str]=None, sample_db_id: List[str]=None):  # noqa: E501
        """SampleSearchRequest - a model defined in Swagger

        :param germplasm_db_id: The germplasm_db_id of this SampleSearchRequest.  # noqa: E501
        :type germplasm_db_id: List[str]
        :param observation_unit_db_id: The observation_unit_db_id of this SampleSearchRequest.  # noqa: E501
        :type observation_unit_db_id: List[str]
        :param page: The page of this SampleSearchRequest.  # noqa: E501
        :type page: int
        :param page_size: The page_size of this SampleSearchRequest.  # noqa: E501
        :type page_size: int
        :param plate_db_id: The plate_db_id of this SampleSearchRequest.  # noqa: E501
        :type plate_db_id: List[str]
        :param sample_db_id: The sample_db_id of this SampleSearchRequest.  # noqa: E501
        :type sample_db_id: List[str]
        """
        self.swagger_types = {
            'germplasm_db_id': List[str],
            'observation_unit_db_id': List[str],
            'page': int,
            'page_size': int,
            'plate_db_id': List[str],
            'sample_db_id': List[str]
        }

        self.attribute_map = {
            'germplasm_db_id': 'germplasmDbId',
            'observation_unit_db_id': 'observationUnitDbId',
            'page': 'page',
            'page_size': 'pageSize',
            'plate_db_id': 'plateDbId',
            'sample_db_id': 'sampleDbId'
        }

        self._germplasm_db_id = germplasm_db_id
        self._observation_unit_db_id = observation_unit_db_id
        self._page = page
        self._page_size = page_size
        self._plate_db_id = plate_db_id
        self._sample_db_id = sample_db_id

    @classmethod
    def from_dict(cls, dikt) -> 'SampleSearchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The sampleSearchRequest of this SampleSearchRequest.  # noqa: E501
        :rtype: SampleSearchRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def germplasm_db_id(self) -> List[str]:
        """Gets the germplasm_db_id of this SampleSearchRequest.

         The ID which uniquely identifies a germplasm  # noqa: E501

        :return: The germplasm_db_id of this SampleSearchRequest.
        :rtype: List[str]
        """
        return self._germplasm_db_id

    @germplasm_db_id.setter
    def germplasm_db_id(self, germplasm_db_id: List[str]):
        """Sets the germplasm_db_id of this SampleSearchRequest.

         The ID which uniquely identifies a germplasm  # noqa: E501

        :param germplasm_db_id: The germplasm_db_id of this SampleSearchRequest.
        :type germplasm_db_id: List[str]
        """

        self._germplasm_db_id = germplasm_db_id

    @property
    def observation_unit_db_id(self) -> List[str]:
        """Gets the observation_unit_db_id of this SampleSearchRequest.

        The ID which uniquely identifies an observation unit  # noqa: E501

        :return: The observation_unit_db_id of this SampleSearchRequest.
        :rtype: List[str]
        """
        return self._observation_unit_db_id

    @observation_unit_db_id.setter
    def observation_unit_db_id(self, observation_unit_db_id: List[str]):
        """Sets the observation_unit_db_id of this SampleSearchRequest.

        The ID which uniquely identifies an observation unit  # noqa: E501

        :param observation_unit_db_id: The observation_unit_db_id of this SampleSearchRequest.
        :type observation_unit_db_id: List[str]
        """

        self._observation_unit_db_id = observation_unit_db_id

    @property
    def page(self) -> int:
        """Gets the page of this SampleSearchRequest.

        Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is 0.  # noqa: E501

        :return: The page of this SampleSearchRequest.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page: int):
        """Sets the page of this SampleSearchRequest.

        Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is 0.  # noqa: E501

        :param page: The page of this SampleSearchRequest.
        :type page: int
        """

        self._page = page

    @property
    def page_size(self) -> int:
        """Gets the page_size of this SampleSearchRequest.

        The size of the pages to be returned. Default is 1000.  # noqa: E501

        :return: The page_size of this SampleSearchRequest.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size: int):
        """Sets the page_size of this SampleSearchRequest.

        The size of the pages to be returned. Default is 1000.  # noqa: E501

        :param page_size: The page_size of this SampleSearchRequest.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def plate_db_id(self) -> List[str]:
        """Gets the plate_db_id of this SampleSearchRequest.

        The ID which uniquely identifies a plate of samples  # noqa: E501

        :return: The plate_db_id of this SampleSearchRequest.
        :rtype: List[str]
        """
        return self._plate_db_id

    @plate_db_id.setter
    def plate_db_id(self, plate_db_id: List[str]):
        """Sets the plate_db_id of this SampleSearchRequest.

        The ID which uniquely identifies a plate of samples  # noqa: E501

        :param plate_db_id: The plate_db_id of this SampleSearchRequest.
        :type plate_db_id: List[str]
        """

        self._plate_db_id = plate_db_id

    @property
    def sample_db_id(self) -> List[str]:
        """Gets the sample_db_id of this SampleSearchRequest.

        The ID which uniquely identifies a sample  # noqa: E501

        :return: The sample_db_id of this SampleSearchRequest.
        :rtype: List[str]
        """
        return self._sample_db_id

    @sample_db_id.setter
    def sample_db_id(self, sample_db_id: List[str]):
        """Sets the sample_db_id of this SampleSearchRequest.

        The ID which uniquely identifies a sample  # noqa: E501

        :param sample_db_id: The sample_db_id of this SampleSearchRequest.
        :type sample_db_id: List[str]
        """

        self._sample_db_id = sample_db_id
