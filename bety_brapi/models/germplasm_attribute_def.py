# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bety_brapi.models.base_model_ import Model
from bety_brapi import util


class GermplasmAttributeDef(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, attribute_category_db_id: str=None, attribute_db_id: str=None, attribute_name: str=None, code: str=None, datatype: str=None, description: str=None, name: str=None, uri: str=None, values: List[str]=None):  # noqa: E501
        """GermplasmAttributeDef - a model defined in Swagger

        :param attribute_category_db_id: The attribute_category_db_id of this GermplasmAttributeDef.  # noqa: E501
        :type attribute_category_db_id: str
        :param attribute_db_id: The attribute_db_id of this GermplasmAttributeDef.  # noqa: E501
        :type attribute_db_id: str
        :param attribute_name: The attribute_name of this GermplasmAttributeDef.  # noqa: E501
        :type attribute_name: str
        :param code: The code of this GermplasmAttributeDef.  # noqa: E501
        :type code: str
        :param datatype: The datatype of this GermplasmAttributeDef.  # noqa: E501
        :type datatype: str
        :param description: The description of this GermplasmAttributeDef.  # noqa: E501
        :type description: str
        :param name: The name of this GermplasmAttributeDef.  # noqa: E501
        :type name: str
        :param uri: The uri of this GermplasmAttributeDef.  # noqa: E501
        :type uri: str
        :param values: The values of this GermplasmAttributeDef.  # noqa: E501
        :type values: List[str]
        """
        self.swagger_types = {
            'attribute_category_db_id': str,
            'attribute_db_id': str,
            'attribute_name': str,
            'code': str,
            'datatype': str,
            'description': str,
            'name': str,
            'uri': str,
            'values': List[str]
        }

        self.attribute_map = {
            'attribute_category_db_id': 'attributeCategoryDbId',
            'attribute_db_id': 'attributeDbId',
            'attribute_name': 'attributeName',
            'code': 'code',
            'datatype': 'datatype',
            'description': 'description',
            'name': 'name',
            'uri': 'uri',
            'values': 'values'
        }

        self._attribute_category_db_id = attribute_category_db_id
        self._attribute_db_id = attribute_db_id
        self._attribute_name = attribute_name
        self._code = code
        self._datatype = datatype
        self._description = description
        self._name = name
        self._uri = uri
        self._values = values

    @classmethod
    def from_dict(cls, dikt) -> 'GermplasmAttributeDef':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The germplasmAttributeDef of this GermplasmAttributeDef.  # noqa: E501
        :rtype: GermplasmAttributeDef
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_category_db_id(self) -> str:
        """Gets the attribute_category_db_id of this GermplasmAttributeDef.

        The ID which uniquely identifies this attribute category within the given database server  # noqa: E501

        :return: The attribute_category_db_id of this GermplasmAttributeDef.
        :rtype: str
        """
        return self._attribute_category_db_id

    @attribute_category_db_id.setter
    def attribute_category_db_id(self, attribute_category_db_id: str):
        """Sets the attribute_category_db_id of this GermplasmAttributeDef.

        The ID which uniquely identifies this attribute category within the given database server  # noqa: E501

        :param attribute_category_db_id: The attribute_category_db_id of this GermplasmAttributeDef.
        :type attribute_category_db_id: str
        """

        self._attribute_category_db_id = attribute_category_db_id

    @property
    def attribute_db_id(self) -> str:
        """Gets the attribute_db_id of this GermplasmAttributeDef.

        The ID which uniquely identifies this attribute within the given database server  # noqa: E501

        :return: The attribute_db_id of this GermplasmAttributeDef.
        :rtype: str
        """
        return self._attribute_db_id

    @attribute_db_id.setter
    def attribute_db_id(self, attribute_db_id: str):
        """Sets the attribute_db_id of this GermplasmAttributeDef.

        The ID which uniquely identifies this attribute within the given database server  # noqa: E501

        :param attribute_db_id: The attribute_db_id of this GermplasmAttributeDef.
        :type attribute_db_id: str
        """

        self._attribute_db_id = attribute_db_id

    @property
    def attribute_name(self) -> str:
        """Gets the attribute_name of this GermplasmAttributeDef.

        A human readable name for this attribute  # noqa: E501

        :return: The attribute_name of this GermplasmAttributeDef.
        :rtype: str
        """
        return self._attribute_name

    @attribute_name.setter
    def attribute_name(self, attribute_name: str):
        """Sets the attribute_name of this GermplasmAttributeDef.

        A human readable name for this attribute  # noqa: E501

        :param attribute_name: The attribute_name of this GermplasmAttributeDef.
        :type attribute_name: str
        """

        self._attribute_name = attribute_name

    @property
    def code(self) -> str:
        """Gets the code of this GermplasmAttributeDef.

        Short abbreviation which represents this attribute  # noqa: E501

        :return: The code of this GermplasmAttributeDef.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code: str):
        """Sets the code of this GermplasmAttributeDef.

        Short abbreviation which represents this attribute  # noqa: E501

        :param code: The code of this GermplasmAttributeDef.
        :type code: str
        """

        self._code = code

    @property
    def datatype(self) -> str:
        """Gets the datatype of this GermplasmAttributeDef.

        The type of data represented by this attribute  # noqa: E501

        :return: The datatype of this GermplasmAttributeDef.
        :rtype: str
        """
        return self._datatype

    @datatype.setter
    def datatype(self, datatype: str):
        """Sets the datatype of this GermplasmAttributeDef.

        The type of data represented by this attribute  # noqa: E501

        :param datatype: The datatype of this GermplasmAttributeDef.
        :type datatype: str
        """

        self._datatype = datatype

    @property
    def description(self) -> str:
        """Gets the description of this GermplasmAttributeDef.

        A human readable description of this attribute  # noqa: E501

        :return: The description of this GermplasmAttributeDef.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this GermplasmAttributeDef.

        A human readable description of this attribute  # noqa: E501

        :param description: The description of this GermplasmAttributeDef.
        :type description: str
        """

        self._description = description

    @property
    def name(self) -> str:
        """Gets the name of this GermplasmAttributeDef.

        DEPRECATED in v1.3 - Use \"attributeName\"  # noqa: E501

        :return: The name of this GermplasmAttributeDef.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this GermplasmAttributeDef.

        DEPRECATED in v1.3 - Use \"attributeName\"  # noqa: E501

        :param name: The name of this GermplasmAttributeDef.
        :type name: str
        """

        self._name = name

    @property
    def uri(self) -> str:
        """Gets the uri of this GermplasmAttributeDef.

        The URI reference some external documentation or ontology for this attribute  # noqa: E501

        :return: The uri of this GermplasmAttributeDef.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri: str):
        """Sets the uri of this GermplasmAttributeDef.

        The URI reference some external documentation or ontology for this attribute  # noqa: E501

        :param uri: The uri of this GermplasmAttributeDef.
        :type uri: str
        """

        self._uri = uri

    @property
    def values(self) -> List[str]:
        """Gets the values of this GermplasmAttributeDef.

        List of acceptable values for this attribute  # noqa: E501

        :return: The values of this GermplasmAttributeDef.
        :rtype: List[str]
        """
        return self._values

    @values.setter
    def values(self, values: List[str]):
        """Sets the values of this GermplasmAttributeDef.

        List of acceptable values for this attribute  # noqa: E501

        :param values: The values of this GermplasmAttributeDef.
        :type values: List[str]
        """

        self._values = values
